<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>蕩漾</title>
    <link>http://example.com/</link>
    
    <atom:link href="http://example.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>恍不觉梦,流离之人,追逐幻影,弃友弃人</description>
    <pubDate>Sat, 11 Oct 2025 18:07:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>NFC</title>
      <link>http://example.com/2025/nfc-scheme/</link>
      <guid>http://example.com/2025/nfc-scheme/</guid>
      <pubDate>Wed, 01 Oct 2025 16:00:00 GMT</pubDate>
      
      <description>&lt;h2 id=&quot;扫一扫&quot;&gt;&lt;a href=&quot;#扫一扫&quot; class=&quot;headerlink&quot; title=&quot;扫一扫&quot;&gt;&lt;/a&gt;扫一扫&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;应用&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;URL Scheme&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;微信&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;weixin:&amp;#x2F;&amp;#x2F;scanqrcode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;支付宝&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;alipays:&amp;#x2F;&amp;#x2F;platformapi&amp;#x2F;startapp?saId&amp;#x3D;10000007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;QQ&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;mqqapi:&amp;#x2F;&amp;#x2F;qrcode&amp;#x2F;scan_qrcode?version&amp;#x3D;1&amp;amp;src_type&amp;#x3D;app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tim&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;tim:&amp;#x2F;&amp;#x2F;qrcode&amp;#x2F;scan_qrcode?version&amp;#x3D;1&amp;amp;src_type&amp;#x3D;app&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;美团&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;imeituan:&amp;#x2F;&amp;#x2F;&lt;a href=&quot;http://www.meituan.com/scanQRCode?openAR=1&quot;&gt;www.meituan.com/scanQRCode?openAR=1&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;京东&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;openapp.jdmobile:&amp;#x2F;&amp;#x2F;virtual?params&amp;#x3D;{“category”:”jump”,”des”:”saoasao”}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;钉钉&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;dingtalk:&amp;#x2F;&amp;#x2F;dingtalkclient&amp;#x2F;page&amp;#x2F;scan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;淘宝&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;taobao:&amp;#x2F;&amp;#x2F;tb.cn&amp;#x2F;n&amp;#x2F;scancode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;知乎&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;zhihu:&amp;#x2F;&amp;#x2F;codereader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bilibili&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;bilibili:&amp;#x2F;&amp;#x2F;qrcode&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;微博&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;sinaweibo:&amp;#x2F;&amp;#x2F;qrcode&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="扫一扫"><a href="#扫一扫" class="headerlink" title="扫一扫"></a>扫一扫</h2><table><thead><tr><th>应用</th><th align="left">URL Scheme</th></tr></thead><tbody><tr><td>微信</td><td align="left">weixin:&#x2F;&#x2F;scanqrcode</td></tr><tr><td>支付宝</td><td align="left">alipays:&#x2F;&#x2F;platformapi&#x2F;startapp?saId&#x3D;10000007</td></tr><tr><td>QQ</td><td align="left">mqqapi:&#x2F;&#x2F;qrcode&#x2F;scan_qrcode?version&#x3D;1&amp;src_type&#x3D;app</td></tr><tr><td>Tim</td><td align="left">tim:&#x2F;&#x2F;qrcode&#x2F;scan_qrcode?version&#x3D;1&amp;src_type&#x3D;app</td></tr><tr><td>美团</td><td align="left">imeituan:&#x2F;&#x2F;<a href="http://www.meituan.com/scanQRCode?openAR=1">www.meituan.com/scanQRCode?openAR=1</a></td></tr><tr><td>京东</td><td align="left">openapp.jdmobile:&#x2F;&#x2F;virtual?params&#x3D;{“category”:”jump”,”des”:”saoasao”}</td></tr><tr><td>钉钉</td><td align="left">dingtalk:&#x2F;&#x2F;dingtalkclient&#x2F;page&#x2F;scan</td></tr><tr><td>淘宝</td><td align="left">taobao:&#x2F;&#x2F;tb.cn&#x2F;n&#x2F;scancode</td></tr><tr><td>知乎</td><td align="left">zhihu:&#x2F;&#x2F;codereader</td></tr><tr><td>bilibili</td><td align="left">bilibili:&#x2F;&#x2F;qrcode</td></tr><tr><td>微博</td><td align="left">sinaweibo:&#x2F;&#x2F;qrcode</td></tr></tbody></table><span id="more"></span><h2 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h2><ul><li>bilibili:&#x2F;&#x2F;video&#x2F;【bv号】 打开哔哩哔哩并播放视频</li><li>bilibili:&#x2F;&#x2F;space&#x2F;【Uid】 打开用户主页</li><li>bilibili:&#x2F;&#x2F;live&#x2F;【直播间ID】 打开直播间</li></ul><h2 id="网易云"><a href="#网易云" class="headerlink" title="网易云"></a>网易云</h2><ul><li>orpheus:&#x2F;&#x2F;song&#x2F;【歌曲ID】</li><li>本地音乐 orpheus:&#x2F;&#x2F;download</li><li>orpheus:&#x2F;&#x2F;playlist&#x2F;【歌单ID】</li></ul><h2 id="QQ音乐"><a href="#QQ音乐" class="headerlink" title="QQ音乐"></a>QQ音乐</h2><ul><li>qqmusic:&#x2F;&#x2F;qq.com&#x2F;media&#x2F;playSonglist?p&#x3D;{“song”:[{“songmid”:”歌曲ID”}]}</li></ul><h2 id="抖音"><a href="#抖音" class="headerlink" title="抖音"></a>抖音</h2><ul><li><p>snssdk1128:&#x2F;&#x2F;aweme&#x2F;detail&#x2F;{itemId}作品</p></li><li><p>snssdk1128:&#x2F;&#x2F;aweme&#x2F;live&#x2F;{roomId}直播</p></li></ul><h2 id="微信"><a href="#微信" class="headerlink" title="微信"></a>微信</h2><ul><li>扫一扫 weixin:&#x2F;&#x2F;scanqrcode</li><li>扫一扫 weixin:&#x2F;&#x2F;dl&#x2F;scan</li><li>微信付款码 weixin:&#x2F;&#x2F;widget&#x2F;pay</li><li>反馈 weixin:&#x2F;&#x2F;dl&#x2F;feedback</li><li>朋友圈 weixin:&#x2F;&#x2F;dl&#x2F;moments</li><li>设置 weixin:&#x2F;&#x2F;dl&#x2F;settings</li><li>消息通知设置 weixin:&#x2F;&#x2F;dl&#x2F;notifications</li><li>聊天设置 weixin:&#x2F;&#x2F;dl&#x2F;chat</li><li>通用设置 weixin:&#x2F;&#x2F;dl&#x2F;general</li><li>公众号 weixin:&#x2F;&#x2F;dl&#x2F;officialaccounts</li><li>游戏 weixin:&#x2F;&#x2F;dl&#x2F;games</li><li>帮助 weixin:&#x2F;&#x2F;dl&#x2F;help</li><li>反馈 weixin:&#x2F;&#x2F;dl&#x2F;feedback</li><li>个人信息 weixin:&#x2F;&#x2F;dl&#x2F;profile</li><li>功能插件 weixin:&#x2F;&#x2F;dl&#x2F;features</li></ul><h2 id="支付宝"><a href="#支付宝" class="headerlink" title="支付宝"></a>支付宝</h2><ul><li>扫一扫 alipayqr:&#x2F;&#x2F;platformapi&#x2F;startapp?saId&#x3D;10000007</li><li>付款码 alipayqr:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;20000056</li><li>收款码 alipayqr:&#x2F;&#x2F;platformapi&#x2F;startapp?saId&#x3D;20000123</li><li>转账 alipays:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;20000116</li><li>发红包 alipay:&#x2F;&#x2F;platformapi&#x2F;startapp?saId&#x3D;88886666</li><li>记账本 alipays:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;20000168</li><li>创建群聊 alipay:&#x2F;&#x2F;platformapi&#x2F;startapp？appId&#x3D;20000254&amp;actionType&#x3D;createGroup</li><li>滴滴出行 alipay:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;20000778</li><li>蚂蚁森林 alipay:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;60000002</li><li>手机充值 alipayqr:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;10000003</li><li>生活缴费 alipays:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;20000193</li><li>快递查询 alipays:&#x2F;&#x2F;platformapi&#x2F;startapp?appId&#x3D;20000754</li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      <category domain="http://example.com/tags/NFC/">NFC</category>
      
      
      <comments>http://example.com/2025/nfc-scheme/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Juri连段备忘录</title>
      <link>http://example.com/2025/han-zhu-li-lian-duan-bei-wang-lu/</link>
      <guid>http://example.com/2025/han-zhu-li-lian-duan-bei-wang-lu/</guid>
      <pubDate>Tue, 17 Jun 2025 16:00:00 GMT</pubDate>
      
      <description>&lt;img src=&quot;https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/QQ%25E5%259B%25BE%25E7%2589%258720250803223557(1).jpeg&quot; style=&quot;zoom:33%;&quot; /&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/QQ%25E5%259B%25BE%25E7%2589%258720250803223557(1).jpeg" style="zoom:33%;" /><span id="more"></span><h2 id="进攻压制"><a href="#进攻压制" class="headerlink" title="进攻压制"></a>进攻压制</h2><h3 id="贴身轻拳"><a href="#贴身轻拳" class="headerlink" title="贴身轻拳"></a>贴身轻拳</h3><ul><li><p>“轻拳<em>2”+轻拳+重升龙【+28】 —— 两点确认，最速抢招</em></p><ul><li><em>被防：“轻拳</em>2”+轻脚+中风破刃 —— 被防基本无责，但轻脚会被对手6帧拳脚抢招</li></ul></li></ul><h3 id="贴身轻脚"><a href="#贴身轻脚" class="headerlink" title="贴身轻脚"></a>贴身轻脚</h3><ul><li>“下轻脚+下轻拳*2+中风破刃”【+37】 —— 无脑复合，偷下段<ul><li>被防：基本无责</li></ul></li></ul><h3 id="近距离"><a href="#近距离" class="headerlink" title="近距离"></a>近距离</h3><ul><li>“轻拳+轻脚”+重升龙【+26~28】 —— 两点确认，距离要求宽松，非常推荐</li></ul><h3 id="中远距离"><a href="#中远距离" class="headerlink" title="中远距离"></a>中远距离</h3><ul><li><p>“下中脚+中风破刃”【+37】 —— 无脑复合，全游最长可取消的下段拳脚，好用多用。</p><ul><li>被防：控制好距离基本无责</li></ul></li><li><p>“下中脚+绿冲取消中拳”+下重拳+重风破刃+重升龙【+27】 —— 两点确认</p><ul><li>被防：“下中脚+绿冲取消中拳”+中拳+下中拳+中风破刃</li></ul></li></ul><h3 id="较远距离"><a href="#较远距离" class="headerlink" title="较远距离"></a>较远距离</h3><ul><li><p>“绿冲中拳+下重拳”+重风破刃+重升龙【+28】 —— 两点确认，蛛俐招牌绿冲</p><ul><li>被防：“绿冲中拳+下重拳”+轻风破刃</li></ul></li><li><p>“绿冲下轻脚+中拳+下中拳+中风破刃”【+37】 —— 无脑复合，偷下段</p></li></ul><h3 id="远距离"><a href="#远距离" class="headerlink" title="远距离"></a>远距离</h3><ul><li><p>“绿冲前中拳”+下重拳+重风破刃+重升龙【+28】 —— 绿冲前中拳确认</p><ul><li>被防：“绿冲前中拳”+下轻拳+轻风破刃</li></ul></li><li><p>“绿冲下中脚+绿冲取消中拳”+任意收尾 —— 两点确认，耗四格斗气，斩杀用</p><ul><li>被防：“绿冲下中脚+绿冲取消中拳”+中拳+下中拳+中风破刃</li></ul></li></ul><h3 id="跳入"><a href="#跳入" class="headerlink" title="跳入"></a>跳入</h3><ul><li><p>近距离~较远距离：</p><ul><li>0球：“跳中脚+中拳+下中拳”+中风破刃【+37】 —— 三点确认<ul><li>压起身方式同贴身轻脚连段</li></ul></li></ul></li><li><p>近距离~较远距离：</p><ul><li>2球：“跳中脚+中拳+下中拳”+五黄杀+地波【+19】 —— 三点确认，压起身和伤害比上一套更猛<ul><li>压起身：<ul><li>前前卡帧+中拳 <ul><li>对手如果原地受身，则地波先击中，按照常规中拳贴身压制方式处理</li><li>对手如果后退受身，则中拳先击中，地波命中+13，接重拳+重风破刃+重升龙<ul><li>地波被防+9，接后重脚+中风破刃，磨掉对手一格多斗气</li></ul></li></ul></li></ul></li><li>微前走确认对手前后起手，后起身前前踩头</li></ul></li></ul></li><li><p>远距离，0球：“跳重脚+前中拳+轻风破刃”【+37】 —— 无脑复合</p></li><li><p>远距离，1球：“跳重脚+重拳”+下劈+前中拳+重升龙&#x2F;中风破刃【+28&#x2F;+37】 —— 两点确认</p><ul><li>被防：“跳重脚+重拳”+地波</li></ul></li></ul><h2 id="中拳-下中拳被防处理"><a href="#中拳-下中拳被防处理" class="headerlink" title="中拳+下中拳被防处理"></a>中拳+下中拳被防处理</h2><ul><li><p>中拳之后：</p><ul><li><p>蹲防：前跳踩头</p></li><li><p>后走：下中脚</p></li><li><p>轻攻击：站重拳差和</p></li></ul></li><li><p>0球 —— 没什么可接的，满斗气可以接绿冲取消中拳，不太划算</p><ul><li>版边可以后后，距离刚好升龙对空</li></ul></li><li><p>1球，版边限定 —— 接地波+前中拳复合轻风破刃，对手如果用中力度拳脚抢招就会被打康吃一套</p><ul><li>对手如果用轻力度拳脚抢招或一直拉防就被磨掉一格多斗气，而蛛俐不耗任何资源还不会被确反</li><li>想迸放吗</li><li>不过前跳，斗反和凹都能破解，所以要和后后混着用</li></ul></li><li><p>2球，版中限定 —— 接回旋踢+地波，回旋踢能打乱动，被防-3</p><ul><li>压起身：<ul><li>微前走确认对手前后起手，后起身前前踩头</li><li>前前卡帧+中拳 <ul><li>对手如果原地受身，则地波先击中，按照常规中拳贴身压制方式处理</li><li>对手如果后退受身，则中拳先击中，地波命中+13，接重拳+重风破刃+重升龙<ul><li>地波被防+9，接后重脚+中风破刃，磨掉对手一格多斗气</li></ul></li></ul></li></ul></li></ul></li></ul><h2 id="压起身"><a href="#压起身" class="headerlink" title="压起身"></a>压起身</h2><h3 id="重升龙【-26-28】"><a href="#重升龙【-26-28】" class="headerlink" title="重升龙【+26~28】"></a>重升龙【+26~28】</h3><h4 id="劈头-轻脚重升龙【-26】"><a href="#劈头-轻脚重升龙【-26】" class="headerlink" title="劈头+轻脚重升龙【+26】"></a>劈头+轻脚重升龙【+26】</h4><ul><li><p>前前卡帧+下中脚复合轻&#x2F;中风破刃 </p><p>a.对手原地受身用轻风破刃</p><p>b.对手后退受身用中风破刃</p></li><li><p>前前卡帧+中拳 （不偷帧）</p></li><li><p>绿冲放帧中拳【+6】</p></li><li><p>版边限定：中拳卡帧之后【+4】不可防斗反</p></li></ul><h4 id="重风破刃-重升龙【-27】"><a href="#重风破刃-重升龙【-27】" class="headerlink" title="重风破刃+重升龙【+27】"></a>重风破刃+重升龙【+27】</h4><ul><li><p>前前卡帧+下中脚复合轻&#x2F;中风破刃 </p><p>a.对手原地受身用轻风破刃</p><p>b.对手后退受身用中风破刃</p></li><li><p>前前卡帧+中拳 </p><ul><li>偷帧命中+8，被防+3，均接下中拳，版边限定不怕斗反</li></ul></li><li><p>绿冲放帧中拳【+6】</p></li><li><p>版边限定：中拳卡帧之后【+5】可防斗反</p></li></ul><h4 id="轻攻击-重升龙【-28】"><a href="#轻攻击-重升龙【-28】" class="headerlink" title="轻攻击+重升龙【+28】"></a>轻攻击+重升龙【+28】</h4><ul><li><p>前前卡帧+中拳 （不偷帧）</p></li><li><p>前前卡帧+下中脚复合轻&#x2F;中风破刃 </p><p>a.对手原地受身用轻风破刃</p><p>b.对手后退受身用中风破刃</p></li><li><p>板边不能中拳卡帧</p></li><li><p>版边限定：中拳卡帧之后【+6】可防斗反</p></li></ul><h3 id="中风破刃【-37】"><a href="#中风破刃【-37】" class="headerlink" title="中风破刃【+37】"></a>中风破刃【+37】</h3><ul><li>前前卡帧+前重拳复合轻风破刃 —— 较为安全的压起身，被防只有个别4帧拳脚很长的角色能确反（卢克 玛丽莎 曼侬 本田 拉希德）</li><li>下中脚卡帧【+8】可后走打拆，仿帧投</li><li>前前卡帧+前重拳复合轻地波 —— 命中接下劈，2球限定，被防-3</li><li>前前卡帧+绿冲中拳 —— 命中+11，被防+6，均接下重拳</li><li>前前卡帧+绿冲下轻脚 —— 命中+7，接中拳，被防+3，可接中拳&#x2F;投</li><li>其实最推荐直接绿冲凭感觉压起身，可以及时后走骗拆防凹</li><li>轻风破刃卡帧+中拳复合轻风破刃 —— 被防无责，最速攒满3球，开始无限压制，版边限定</li><li>绿冲+迸放 —— 版边限定</li></ul><h3 id="五黄杀"><a href="#五黄杀" class="headerlink" title="五黄杀"></a>五黄杀</h3><h4 id="有球结尾【-37】"><a href="#有球结尾【-37】" class="headerlink" title="有球结尾【+37】"></a>有球结尾【+37】</h4><p>参考中风破结尾</p><ul><li>五黄杀+地波压制<ul><li>微前走确认对手前后起手，后起身前前踩头</li><li>前前卡帧+中拳 <ul><li>对手如果原地受身，则地波先击中，按照常规中拳贴身压制方式处理</li><li>对手如果后退受身，则中拳先击中，地波命中+13，接重拳+重风破刃+重升龙<ul><li>地波被防+9，接后重脚+中风破刃，磨掉对手一格多斗气</li></ul></li></ul></li></ul></li></ul><h4 id="无球结尾【-27】"><a href="#无球结尾【-27】" class="headerlink" title="无球结尾【+27】"></a>无球结尾【+27】</h4><ul><li><p>前前卡帧+下中脚复合轻&#x2F;中风破刃 </p><p>a.对手原地受身用轻风破刃</p><p>b.对手后退受身用中风破刃</p></li><li><p>前前卡帧+中拳 </p><ul><li>偷帧命中+8，被防+3，均接下中拳，版边限定不怕斗反</li></ul></li><li><p>绿冲放帧中拳【+6】</p></li><li><p>版边限定：中拳卡帧之后【+5】可防斗反</p></li></ul><h3 id="重风破刃-轻升龙收尾【-36】"><a href="#重风破刃-轻升龙收尾【-36】" class="headerlink" title="重风破刃+轻升龙收尾【+36】"></a>重风破刃+轻升龙收尾【+36】</h3><ul><li>轻风破刃卡帧+中拳复合轻风破刃 —— 被防无责，最速攒满3球，开始无限压制，版边限定</li><li>其实最推荐直接绿冲凭感觉压起身，可以及时后走骗拆防凹</li></ul><h3 id="一气【-48】"><a href="#一气【-48】" class="headerlink" title="一气【+48】"></a>一气【+48】</h3><h4 id="裸一气"><a href="#裸一气" class="headerlink" title="裸一气"></a>裸一气</h4><ul><li>远版【+48】：</li><li>版边【+26】</li></ul><h4 id="重风破刃-一气"><a href="#重风破刃-一气" class="headerlink" title="重风破刃+一气"></a>重风破刃+一气</h4><ul><li>远版【+53】</li><li>版边【+20】</li></ul><h4 id="OD回旋踢下劈-一气收尾"><a href="#OD回旋踢下劈-一气收尾" class="headerlink" title="OD回旋踢下劈+一气收尾"></a>OD回旋踢下劈+一气收尾</h4><ul><li>远版【+51】 </li><li>版边【+27】</li></ul><h3 id="前投【-25】"><a href="#前投【-25】" class="headerlink" title="前投【+25】"></a>前投【+25】</h3><ul><li><p>版中除非投到确反康否则无法压起身，蓄球吧</p></li><li><p>绿冲前中拳</p></li><li><p>前前卡帧 【 +3】下轻脚&#x2F;中拳&#x2F;投&#x2F;后后骗拆，版边限定</p></li></ul><h4 id="后投【-18】"><a href="#后投【-18】" class="headerlink" title="后投【+18】"></a>后投【+18】</h4><ul><li>绿冲前中拳压起身，版中确反康或版边限定</li></ul><h2 id="确反"><a href="#确反" class="headerlink" title="确反"></a>确反</h2><h3 id="无风破球"><a href="#无风破球" class="headerlink" title="无风破球"></a>无风破球</h3><ul><li><p>无资源时：中拳+重拳+下劈+轻脚+重升龙【+26】 —— 不太推荐，0球时还是蓄球优先</p><ul><li>压起身：除了近距离连段那些压起身，+26刚好可以直接迸</li></ul></li><li><p>蓄球：中拳+重拳+重风破刃+重升龙【+27】</p></li><li><p>最推荐：中拳+重拳+OD劈头+前中拳+中风破&#x2F;重升龙</p></li></ul><h3 id="1风破球"><a href="#1风破球" class="headerlink" title="1风破球"></a>1风破球</h3><ul><li>打伤害：中拳+重拳+下劈+前中拳+重升龙【+28】 —— 要蓄球就把重升龙换成中风破刃</li></ul><h3 id="2风破球"><a href="#2风破球" class="headerlink" title="2风破球"></a>2风破球</h3><ul><li>打伤害：前重拳+下中拳+地波下劈+前中拳+重升龙【+28】 —— 要蓄球就把重升龙换成中风破刃</li><li>资源回收：中拳+重拳+OD劈头+前中拳+地波_劈头+前中拳+中风破&#x2F;重升龙</li></ul><h3 id="3风破球"><a href="#3风破球" class="headerlink" title="3风破球"></a>3风破球</h3><ul><li><p>打伤害：前重拳+下中拳+回旋踢地波下劈+前中拳+重升龙【+28】 —— 要蓄球就把重升龙换成中风破刃</p></li><li><p>中拳+重拳+回旋踢-地波-下劈+前中拳+中风破&#x2F;重升龙</p></li><li><p>版边，3斗气，1球，打伤害：前重拳+下中拳+OD回旋踢下劈+重升龙【+27】 —— 性价比极高的连段，推板距离优秀，重升龙还能换成一气</p></li></ul><h3 id="反迸非版边"><a href="#反迸非版边" class="headerlink" title="反迸非版边"></a>反迸非版边</h3><ul><li>打伤害：前重拳+下中拳+回旋踢地波下劈+前中拳+重升龙【+28】 —— 要蓄球就把重升龙换成中风破刃</li></ul><h3 id="反迸版边"><a href="#反迸版边" class="headerlink" title="反迸版边"></a>反迸版边</h3><ul><li><p>绿冲前重拳+重风破刃+轻风破刃+中升龙【+30】 —— 能蓄2球</p><p>压起身：</p><ul><li>版边像这种风破刃+重升龙收尾的连段可以改为风破刃+中升龙收尾，伤害不变，有利帧+30<ul><li>前前卡帧+下中拳 —— 偷帧命中+8，接下重拳</li><li>被防+1，接下中拳+中风破刃</li></ul></li><li>绿冲前中脚</li></ul></li><li><p>前前+下重拳+轻风破刃+重升龙【+30】 —— 能蓄1球，伤害比上一套高，压起身同上</p></li></ul><h3 id="墙崩"><a href="#墙崩" class="headerlink" title="墙崩"></a>墙崩</h3><p>参考反迸版边连段，但第一套不再适用</p><h3 id="晕连"><a href="#晕连" class="headerlink" title="晕连"></a>晕连</h3><p>后跳+轻风破刃+前跳重脚+下重拳+任意收尾</p><h2 id="打拆投"><a href="#打拆投" class="headerlink" title="打拆投"></a>打拆投</h2><h3 id="晃拆"><a href="#晃拆" class="headerlink" title="晃拆"></a>晃拆</h3><h4 id="下重脚"><a href="#下重脚" class="headerlink" title="下重脚"></a>下重脚</h4><ul><li>前中拳卡帧，后走打拆</li></ul><h4 id="中风破刃结尾"><a href="#中风破刃结尾" class="headerlink" title="中风破刃结尾"></a>中风破刃结尾</h4><ul><li>下中脚卡帧</li><li>下重拳卡帧，可后走打拆</li></ul><h4 id="中升龙（-31"><a href="#中升龙（-31" class="headerlink" title="中升龙（+31)"></a>中升龙（+31)</h4><ul><li>前中拳中拳偷帧</li><li>前中拳卡帧后走打拆</li></ul><h4 id="重升龙（-28）"><a href="#重升龙（-28）" class="headerlink" title="重升龙（+28）"></a>重升龙（+28）</h4><ul><li>中拳偷帧</li><li>放帧重升龙，肘击卡帧后走打拆</li></ul><h4 id="跳重拳踩头"><a href="#跳重拳踩头" class="headerlink" title="跳重拳踩头"></a>跳重拳踩头</h4><ul><li>肘击卡帧后走打拆</li></ul><h3 id="0风破球"><a href="#0风破球" class="headerlink" title="0风破球"></a>0风破球</h3><ul><li>“重拳+OD地波”+重升龙【+27】 —— 两点确认<ul><li>被防：“重拳+OD地波”+前中拳+轻风破刃</li></ul></li></ul><h3 id="1风破球-1"><a href="#1风破球-1" class="headerlink" title="1风破球"></a>1风破球</h3><ul><li><p>“重拳+地波”+下中拳+中风破刃【+37】 —— 两点确认</p><ul><li>被防：“重拳+地波”+前中拳+轻风破刃</li></ul></li><li><p>1球，3斗气 “重拳+OD回旋踢”+下劈+重升龙【+27】 —— 两点确认，非版边的话，回旋踢只踢两下就出下劈</p><ul><li>被防：“重拳+OD回旋踢”+地波 —— 全程联防，对手没得凹</li></ul></li></ul><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ul><li><p>重脚确反康+重升龙【+26~27】 —— 重脚最远端命中接不上重升龙</p></li><li><p>下重脚确反康，下重拳卡帧</p></li></ul><h2 id="风水引擎相关"><a href="#风水引擎相关" class="headerlink" title="风水引擎相关"></a>风水引擎相关</h2><ul><li><p>起手①：前重拳开风水 —— 在对手斗气少于2格时，不需确认是否命中直接开，对手要么斗反气绝，要么承受无尽的择</p></li><li><p>起手②：中拳+下中拳开风水 —— 有充足的时间确认命中再开</p></li></ul><p>连段组件①：下轻拳+下中脚+中拳 —— 通常破防用的组件</p><p>连段组件②：轻脚+前中拳+下中脚 —— 使用率最高的组件</p><p>连段组件③：下重拳+重脚+重风破刃 —— 变化最丰富的组件</p><p>三个连段组件的衔接必须练熟，可以把风破球和风水引擎调成无限，在训练场这样练习</p><p>起手命中：</p><p>清斗气：前冲+中脚+中拳+下重拳+迸放【+32】 —— 能打掉近两格斗气</p><p>└压起身：1. 绿冲前中脚+组件②+组件③ —— 中段择</p><ol start="2"><li>下中拳卡帧+下中脚+中拳+组件②+组件③ —— 下段择，版边限定</li></ol><p>无球：前重拳+下劈+组件②+组件③ —— 性价比极高的连段，不易掉招，有安全跳，可以蓄球，还回斗气，只是推板能力略有不足</p><p>有球：前重拳+下劈+下中脚+中拳+组件②+组件③ —— 上一套的升级版</p><p>版中安全跳压起身：“跳中脚+重拳”+绿冲取消下重拳+中脚+中拳+组件②+组件③ —— 两点确认</p><p>└被防：“跳中脚+重拳”+绿冲取消中拳+下中脚+中拳+破防套路 —— 破防套路下面介绍</p><p>版边安全跳压起身：“跳重脚+下中脚+中拳”+组件②+组件③ —— 三点确认，和版中安全跳相比，不需要耗斗气绿冲取消</p><p>起手被防：</p><p>破防套路①：前冲+组件①+组件②+下重脚+轻风破刃 —— 蓄球，被防无责</p><p>└压起身：1. 下轻拳卡帧+下中脚+中拳+组件②+组件③</p><ol start="2"><li>迸放 —— 版边限定</li></ol><p>破防套路②：前冲+组件①+轻脚+前中拳+前中脚+轻风破刃 —— 蓄球，被防无责，加入中段破防能力出众</p><p>└压起身：1. 绿冲下轻脚+下中脚+中拳+组件②+组件③</p><ol start="2"><li>去掉轻风破刃，迸放 —— 版边限定</li></ol><p>破防套路③：前冲+组件①+组件②+绿冲取消前中脚+中脚+中拳+组件②+组件③ —— 耗3格斗气，前中脚会被对手抢招（真有人敢和风水引擎抢招吗）</p><p>被斗反后重新进攻：</p><ol><li><p>绿冲下轻脚&#x2F;下中脚+中拳+组件②+组件③ —— 如果被防就用上面的破防套路</p></li><li><p>跳中拳+跳中脚+下中脚+中拳+组件②+组件③ —— 蛛俐专属中段二连，用跳重拳+跳重脚也可以，不过跳重拳不小心命中就没后续了</p></li></ol><h2 id="斩杀"><a href="#斩杀" class="headerlink" title="斩杀"></a>斩杀</h2><ul><li><p>一气：绿冲前重拳+下重拳+绿冲取消前重拳+中拳+绿冲取消下重拳+中拳tc+一气</p></li><li><p>二气</p><ul><li><p>0~1球：前重拳+二气+前重拳+绿冲取消前重拳+中拳+绿冲取消下重拳+中脚+中拳+组件②+组件③+强化一气&#x2F;重升龙</p></li><li><p>2球：前重拳+二气+前重拳+绿冲取消前重拳+中拳+绿冲取消下重拳+中脚+中拳+组件②+地波下劈+组件②+组件③+强化一气&#x2F;重升龙 —— 如果在版边，可以在下劈后加上下中脚+中拳</p></li><li><p>3球：前重拳+二气+前重拳+绿冲取消前重拳+中拳+绿冲取消下重拳+中脚+中拳+组件②+回旋踢地波下劈+组件②+组件③+强化一气&#x2F;重升龙 —— 如果在版边，可以在下劈和组件②之间加上下中脚+中拳</p></li></ul></li><li><p>三气：绿冲前重拳+下重拳+绿冲取消前重拳+中拳+绿冲取消下重拳+中拳+根据风破球选择连段+三气 6752</p></li></ul><h2 id="角色对策"><a href="#角色对策" class="headerlink" title="角色对策"></a>角色对策</h2><h3 id="老桑"><a href="#老桑" class="headerlink" title="老桑"></a>老桑</h3><h3 id="豪鬼"><a href="#豪鬼" class="headerlink" title="豪鬼"></a>豪鬼</h3><p>1.板边不使用拆投</p><p>2.打白之后尽量往板边推</p><p>3.白了之后少跳，多前走魔血</p><h2 id="虚损压制"><a href="#虚损压制" class="headerlink" title="虚损压制"></a>虚损压制</h2><ul><li>中拳-下中拳-轻反摇腿<ul><li>站中脚复合重反摇：打8帧抢招</li><li>下重脚退远打下段，无法确反</li></ul></li></ul>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Game/">Game</category>
      
      
      <category domain="http://example.com/tags/Game/">Game</category>
      
      <category domain="http://example.com/tags/%E8%A1%97%E9%9C%B86/">街霸6</category>
      
      
      <comments>http://example.com/2025/han-zhu-li-lian-duan-bei-wang-lu/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>摄影三要素</title>
      <link>http://example.com/2025/she-ying/</link>
      <guid>http://example.com/2025/she-ying/</guid>
      <pubDate>Wed, 30 Apr 2025 16:00:00 GMT</pubDate>
      
      <description>&lt;p&gt;&lt;strong&gt;曝光三要素&lt;/strong&gt;指的是光圈大小、快门速度、感光度ISO&lt;/p&gt;
&lt;img src=&quot;https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/IMG_20250602_191323.jpg&quot; style=&quot;zoom: 50%;&quot; /&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>曝光三要素</strong>指的是光圈大小、快门速度、感光度ISO</p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/IMG_20250602_191323.jpg" style="zoom: 50%;" /><span id="more"></span><h2 id="1-光圈"><a href="#1-光圈" class="headerlink" title="1.光圈"></a><strong>1.光圈</strong></h2><p>光圈是一个用来控制光线透过镜头，进入机身内感光面光量的装置，它通常是在镜头内。表达光圈大小我们是用f值。完整的光圈值系列如下：</p><p><strong>光圈的两个作用</strong></p><p>1.通过进光量的多少来控制摄影时的曝光程度</p><p>2.通过改变光圈的大小来调节所拍照片的清晰与虚化效果</p><hr><p>此处加入一个摄影术语–<strong>景深</strong></p><p><strong>景深</strong> 通俗地说，景深是指拍摄的照片中，对焦点前后能够看到的清晰对象的范围。景深以深浅来衡量，清晰景物的范围较大，是指景深较深，清晰景物的范围较小，是指景深较浅。</p><p>决定景深的因素–<strong>光圈 焦距 物距</strong></p><p><strong>焦距</strong>是焦点到面镜的中心点之间的距离</p><p><strong>物距</strong>是指拍摄者与拍摄对象的距离，更为精确的说是相机镜头与对焦位置的距离</p><p><strong>光圈 焦距 物距对于景深的影响</strong>可以用以下三句话来概括</p><p>光圈越大，景深越浅；光圈越小，景深越深</p><p>焦距越大，景深越浅；焦距越小；景深越深</p><p>物距越大，景深越深；物距越小，景深越浅</p><p><strong>对于任意光圈，其焦点之后的景深大约是焦点前面景深的2倍</strong></p><hr><h2 id="2-快门"><a href="#2-快门" class="headerlink" title="2.快门"></a><strong>2.快门</strong></h2><p>快门是一种让光线在一段精确的时间里照射胶片或影像传感器的装置。快门的另一种含义是指相机的曝光时间长短，通常称为快门时间</p><p><strong>快门级数</strong></p><p>常见的快门时间有：15 8 4 2 1 1&#x2F;2 1&#x2F;4 1&#x2F;8 1&#x2F;15 1&#x2F;30 1&#x2F;60 1&#x2F;125 1&#x2F;250 1&#x2F;500 1&#x2F;1000 1&#x2F;2000 1&#x2F;4000</p><p><strong>安全快门</strong>：安全快门就是手持相机拍摄时，快门时间的设定不能大于拍摄时焦距的倒数</p><p><strong>常用参数</strong>：行人：1&#x2F;500    静物：1&#x2F;124</p><p><strong>快门速度的选择</strong></p><p>快门可以控制曝光量（画面明暗）和运动物体的动感与静态凝结状态在控制曝光量这方面，主要针对光线条件比较极端的拍摄环境，如夜晚，晨昏这一类光线较暗的环境，需要使用慢速快门进行长时间曝光，以获得合理的曝光量，而在室外的太阳光下，环境光线很亮，就需要使用高速快门，以防止画面过曝，拍摄运动对象时，一般创作手法有两种，通过使用高速快门，可以捕捉运动主体瞬间的静态画面，而使用慢速快门，则可以表现出一种运动模糊的效果，最常见的例子就是使用长时间快门拍摄小溪流水，能够排出水流的轨迹。</p><h2 id="3-感光度ISO"><a href="#3-感光度ISO" class="headerlink" title="3.感光度ISO"></a><strong>3.感光度ISO</strong></h2><p>ISO感光度是摄影领域最常使用的术语之一，在胶片时代，其表示胶卷对光线的敏感度。感光度分为100 200 400等。在光线昏暗的场所拍摄，需要用到高感光，同时色彩的鲜艳度和真实性则越会受到影响。</p><p><img src="https://pica.zhimg.com/v2-55b3525056aba13fdfe0c073894077c8_1440w.jpg" alt="img"></p><p><strong>ISO感光度与画质的关系</strong></p><p>感光度越高，噪点越明显，画质就越粗糙，感光度越小，画质越细腻.</p><h2 id="三者的关系"><a href="#三者的关系" class="headerlink" title="三者的关系"></a>三者的关系</h2><p><strong>相同点</strong>–都可以调节曝光的明暗度，光圈大就亮，ISO高也亮，快门速度慢也亮，相反就是暗。</p><p><strong>不同点</strong></p><ol><li>光圈还可以调节景深，小光圈景深大，大光圈景深小，景深无法通过ISO &#x2F;快门来控制，这就是光圈和ISO &#x2F;快门的区别</li><li>ISO除了明暗调节还有一个特点是降低画质，ISO高了画质就会降低，所以升高ISO在三要素里是最后考虑的，实在不成才提高ISO，当然有个别艺术创作想诚心要那种高噪点低画质而提高ISO是例外。</li><li>快门除了变化曝光明暗还有一个功能就是设定捕获瞬间的长短，慢速快门得到一个动态的模糊的目标，快速快门得到一个凝固的瞬间的目标.</li></ol><h1 id="摄影构图"><a href="#摄影构图" class="headerlink" title="摄影构图"></a>摄影构图</h1><p><strong>构图元素及表现手法</strong></p><p>摄影构图是指在摄影中通过被摄画面中点线面的组合，将景物更为合理 更为优美的表现出来。接触摄影构图，首先要了解一些具体的概念，如主体，陪体，留白，前景，背景等。其中主体是所有元素中最为重要的，一般情况下，主体要处于画面中最显眼的位置，陪体也称为宾体，主要用于修饰 陪衬主体，留白主要是指在画面中留出一定没有景物的区域，给欣赏者留下思索的空间。前景主要用于放在主体等景物之前，起到一个过渡性的作用，使主体不至于太突兀，背景主要用于交代主体所处的环境 时节 时间等信息 也可以起到衬托主体的作用</p><h2 id="景别"><a href="#景别" class="headerlink" title="景别"></a><strong>景别</strong></h2><p>景别的划分大致有两种方法：</p><p>第一 根据被摄取主体（景物）在画幅中所占的画幅面积比例大小为标准.</p><p>第二 是以人物为参照系。即以人物在画面中占据比例的大小来划分景别.</p><p><img src="https://pic2.zhimg.com/v2-649ac77bea925e77aac147ab41ce0eb1_1440w.jpg" alt="img"></p><p>摄影的景别来分可分成远景、全景、中景、近景、特写.这是根据摄影机与被摄对象的距离或是摄成的画面的范围大小来区分的.</p><p>1.<strong>远景</strong>是指拍摄远距离景物和人物的一种广阔的画面.</p><p>2.<strong>全景</strong>是摄取较完整的人和场景的全部.</p><p>3.<strong>中景</strong>一般指摄取人的大半身显得空间较大而又能展示人物间的相互关系在影视中运用较多.</p><p>4.<strong>近景</strong>相对来说视距比中景更近一些了.一般指摄取人物的上半身或景物的局部范围比较强调人物的面部表情、手势和上半身形体动作对塑造人物起到重要作用.</p><p>5.<strong>特写</strong>是指拍摄人的头部、面部、人体的局部、物景的某一部的镜头.这是影视中强调某一局部和细节的一种独特而有效的摄影手段.</p><h2 id="摄影色彩"><a href="#摄影色彩" class="headerlink" title="摄影色彩"></a>摄影色彩</h2><p>摄影学中，色彩的运用是一门重要的学问。利用色彩，可以传达不同的画面情感。自然界中任何色彩的产生都离不开太阳光线红、橙、黄、绿、青、蓝、紫这7种光谱色彩的混合叠加。人们把红、绿、蓝这3种色光称之为三原色光，分别简称为R&#x2F;G&#x2F;B。</p><p><img src="https://pic2.zhimg.com/v2-3de9a37e33e7c3c8d70f06baf1a9730f_1440w.jpg" alt="img"></p><p><img src="https://pica.zhimg.com/v2-95f35ddbea66d0cf5a2e36ed6c01f828_1440w.jpg" alt="img"></p><p><strong>色彩的范畴</strong></p><p>　　色彩分为无色彩与有色彩两大范畴。</p><p>　　无色彩指无单色光，即：黑、白、灰；</p><p>　　有色彩指有单色光，即：红、橙、黄、绿、蓝、紫；</p><p>自然界的色彩虽然各不相同</p><p>但任何色彩都具有<strong>色相、明度、饱和度</strong>这三个基本属性</p><p><img src="https://pic1.zhimg.com/v2-471ec29e760f7dcf149c6ea25c6d295a_1440w.jpg" alt="img"></p><p><strong>色相</strong></p><p>色相是指色彩的相貌，即各种颜色之间的区别，是色彩最显著的特征，它是不同波长的色光被感觉的结果，光谱中有红、橙、黄、绿、蓝、紫6种基本色光</p><p><strong>饱和度</strong></p><p>饱和度是指色彩的鲜艳程度，也称色彩的纯度，饱和度取决于该色中含色成分和消色成分的比例，含色成分越大，饱和度越高，消色成分越大，饱和度越低。</p><p><strong>明度</strong></p><p>明度是指色彩的深浅，明暗，它取决于反射光的强度，在无色彩中，明度最高的色为白色，明度最低的色为黑色，中间存在一个从亮到暗的灰色系列。在在彩色中，任何一种纯度都有着自己的明度物特征。例如：黄色为明度最高的色，紫色为明度最低的色。</p><hr><p><strong>暖色调</strong></p><p>即红色、橙色、黄色、赭色等色彩的搭配。这种色调的运用，可使主页呈现温馨、和煦、热情的氛围。</p><p><img src="https://pica.zhimg.com/v2-443aa5901bb0157a8ca6245f3a2d5aa8_1440w.jpg" alt="img"></p><p>暖色调</p><p><strong>冷色调</strong></p><p>即青色、绿色、紫色等色彩的搭配。这种色调的运用，可使主页呈现宁静、清凉、高雅的氛围。</p><p><img src="https://pic3.zhimg.com/v2-1ee58abc43589cc3f0e0d4a10f5e7692_1440w.jpg" alt="img"></p><p>冷色调</p><p><strong>对比色调</strong></p><p>即把色性完全相反的色彩搭配在同一个空间里。例如：红与绿、黄与紫、橙与蓝等。这种色彩的搭配，可以产生强烈的视觉效果，给人亮丽、鲜艳、喜庆的感觉。当然，对比色调如果用得不好，会适得其反，产生俗气、刺眼的不良效果。这就要把握“大调和，小对比”这一个重要原则，即总体的色调应该是统一和谐的，局部的地方可以有一些小的强烈对比。</p><p><img src="https://pica.zhimg.com/v2-b0082b901a33d90bffc5cfbb0042c650_1440w.jpg" alt="img"></p><p>对比色调</p><p>色彩的<strong>心理感觉</strong></p><p>不同的颜色会给浏览者不同的心理感受。</p><p><strong>红色</strong>—是一种激奋的色彩。刺激效果，能使人产生冲动，愤怒，热情，活力的感觉。</p><p><strong>绿色</strong>—介于冷暖两中色彩的中间，显得和睦，宁静，健康，安全的感觉。 它和金黄，淡白搭配，可以产生优雅，舒适的气氛。</p><p><strong>橙色</strong>—也是一种激奋的色彩，具有轻快，欢欣，热烈，温馨，时尚的效果。</p><p><strong>黄色</strong>—具有快乐，希望，智慧和轻快的个性，它的明度最高。</p><p><strong>蓝色</strong>—是最具凉爽，清新，专业的色彩。它和白色混合，能体现柔顺，淡雅，浪漫的气氛(象天空的色彩:)</p><p><strong>白色</strong>—具有洁白，明快，纯真，清洁的感受。</p><p><strong>黑色</strong>—具有深沉，神秘，寂静，悲哀，压抑的感受。</p><p><strong>灰色</strong>—具有中庸，平凡，温和，谦让，中立和高雅的感觉。</p><p>每种色彩在饱和度，透明度上略微变化就会产生不同的感觉。以绿色为例，黄绿色有青春，旺盛的视觉意境，而蓝绿色则显得幽宁，阴深。</p><h2 id="认识光线"><a href="#认识光线" class="headerlink" title="认识光线"></a>认识光线</h2><p><strong>光的特性</strong></p><p>无论是自然光或人工室内光,都有其特征：</p><p><strong>1.明暗度</strong>：明暗度表示光的强弱.它随光源能量和距离的变化而变化。</p><p><strong>2.方向</strong>：只有一个光源,方向很容易确定.而有多个光源诸如多云天气的漫射光,方向就难以确定,甚至完全迷失。</p><p><strong>3.色彩</strong>：光随不同的光的本源,并随它穿越的物质的不同而变化出多种色彩.自然光的色彩与白炽灯光或电子闪光灯作用下的色彩不同,而且阳光本身的色彩,也随大气条件和一天时辰的变化而变化。</p><p><strong>光的基本方向</strong></p><p>光线的方向是以光线的来源，被摄体及相机三者的相对位置来看。可分为顺光、逆光、侧光、侧顺光、侧逆光、顶光、底光。</p><p><img src="https://pic4.zhimg.com/v2-b6b0fcb89100ed11839e40c75b748555_1440w.jpg" alt="img"></p><p>光的基本方向</p><p><strong>1.顺光</strong></p><p>顺光时，被摄体受到均匀照明，景物的阴影被景物自身遮挡住，影调比较柔和。能拍出被摄体表面的质地和带来较好的色彩还原。表现空间立体感的效果也较差.</p><p><strong>优点</strong>：成像清晰，色彩、线条、形态、气氛都能得到真实的还原。</p><p><strong>缺点</strong>：呆板，立体感弱，缺少纵深。</p><p><strong>拍摄要点：</strong>要注意画面层次感和立体感的营造。可考虑通过色彩差异拉大主体与背景的分离度，提高画面立体感.</p><p><strong>2.逆光</strong></p><p>光线的照射方向与照相机的拍摄方向是相反的。主体人物的边缘有明显的光线轮廓，画面有明显的明暗反差。逆光又被称为“轮廓照明”， 是人像摄影中最讲究的一种用光方式，画面效果十分生动，且富有造型特点。</p><p><strong>优点</strong>：逆光具有很强的塑形感，有利于勾勒轮郭，表现空间层次和营造气氛。</p><p><strong>缺点</strong>：因照度极其不均，所以在曝光上很难把握。</p><p><strong>拍摄要点</strong>：</p><p>1.逆光拍摄时，为了防止镜头进光（特殊效果除外），尽量使用镜头遮光罩或是遮光板。</p><p>2.为防止画面明暗反差过大，可以使用反光板或闪光灯等补光工具控制亮度平衡。</p><p><strong>3.侧光</strong></p><p>光线的照射方向与照相机的拍摄方向成90度的夹角关系。主体人物有明显的受光面和背光面之分，光线的方向和明暗关系十分明确。侧光使被摄人物有鲜明的层次感和立体感，被称为“质感照明”。</p><p><strong>优点</strong>：被摄主体一侧受光便会产生强烈的明暗对比，使形态、线条、质感得以突出。</p><p><strong>缺点</strong>：侧光运用在人像摄影中，容易暴露皮肤的瑕疵，形成明暗过渡不均的“阴阳脸”。</p><p><strong>拍摄要点</strong>：1.运用侧光拍摄，适合表现个性鲜明、强硬的人物形象，不太适合一般强调浪漫的婚纱照。2.可以使用反光板或闪光灯对暗部进行补光，以减小光比，以适合婚纱柔和的画面效果。</p><p><strong>4.侧顺光</strong></p><p>光线的照射方向与照相机的拍摄方向成锐角夹角关系。侧顺光兼具顺光与侧光两种光线的特征，它既保证了被摄主体的亮度，又可以使其明暗对比得当，有很好的塑形效果。侧顺光是最常见的外景婚纱用光，也是单光源补光较理想的光线。</p><p><strong>优点</strong>：侧顺光拍摄出的画面中有丰富的影调和层次，不仅有利于表现人物的造型，还可以突出立体感。</p><p><strong>缺点</strong>：亮部和阴影部分的光比以及面积比例掌控很关键。</p><p><strong>拍摄要点</strong>：侧顺光下，人脸大面积处于受光面，所以应按亮部进行测光、曝光，如光比过大，暗部层次缺失严重，则需要利用补光工具给暗部补光，或降低亮部光强。</p><p><strong>5.侧逆光</strong></p><p>光线的照射方向与照相机的拍摄方向成钝角夹角关系。侧逆光兼具逆光与侧光两种光线的特征，采用侧逆光照明，被摄者面部和身体的受光面只占小部分，阴影面占大部分，人物的一侧有明显的轮廓光，能很好地表现被摄对象的立体感，层次丰富。侧逆光拍摄出的画面易产生很好的光影效果。</p><p><strong>优点</strong>：侧逆光具有很强空间感，画面层次丰富且生动活泼。</p><p><strong>缺点</strong>：容易因测光不准确而使画面曝光过度或不足。</p><p><strong>拍摄要点</strong>：</p><p>1.在外景婚纱摄影中，常常需要反光板、闪光灯等辅助照明设备适当提高阴影面的亮度，修饰阴影面的立体层次，改善阴影部分的立体感。</p><p>2.在拍摄人物中近景和特写时，有时作为主光用，有时作修饰光用。3.要根据侧逆光的用途确定光比，避免人物脸部大面积过暗，只有一亮线。</p><p><strong>6.顶光 底光</strong></p><p><strong>顶光</strong>顾名思义就是从头顶上照射下来的光线，又叫骷髅光。最具代表性的顶光就是正午的阳光，这种光线使凸出来的部分更明亮、凹进去的部分更阴暗，它会使人物的眼睛、鼻子下方出现难看的阴影。在外景婚纱拍摄中，应尽量避免使用顶光，如无法避免，则可以将反光板放置在人脸下放，消除阴影。</p><p><strong>底光</strong>是从人的脚下垂直照上来的光线，它往往会使被摄主体显得残暴，纯粹的底光容易形成阴险、恐怖、刻板的效果。底光更多出现在舞台戏剧照明中，而在外景婚纱拍摄中较少用到，但低角度的反光板、广场的地灯、桥下水流的反光等也带有底光的性质。</p><p><strong>自然光</strong></p><p><strong>明暗度</strong> 明暗度表示光的强弱。它随光源能量和距离的变化而变化。</p><p><strong>方向</strong> 如果只有一个光源，方向很容易确定。而有多个光源诸如多云天气的漫射光，方向就难以确定，甚至完全迷失。</p><p><strong>色彩</strong> 光随不同的光源，并随它穿越的物质的不同而变化出多种色彩。自然光的色彩与白炽灯光或电子闪光灯下的色彩不同，而且阳光本身的色彩，也随大气条件和一天时间的变化而变化。</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      
      <category domain="http://example.com/tags/%E6%91%84%E5%BD%B1/">摄影</category>
      
      
      <comments>http://example.com/2025/she-ying/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>可乐鸡翅</title>
      <link>http://example.com/2023/ke-le-ji-chi/</link>
      <guid>http://example.com/2023/ke-le-ji-chi/</guid>
      <pubDate>Sat, 20 May 2023 16:00:00 GMT</pubDate>
      
        
        
      <description>&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</description>
        
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><span id="more"></span><p><strong>材料：</strong></p><ol><li><p>鸡翅10只</p></li><li><p>可乐330毫升（一罐）</p></li><li><p>生姜3片</p></li><li><p>大葱1根</p><!--more--></li><li><p>生抽、老抽各适量</p></li><li><p>白糖两勺</p></li><li><p>料酒适量</p></li><li><p>食盐适量</p></li></ol><p><strong>步骤：</strong></p><ol><li><p>首先，清洗鸡翅并用刀在表面划几刀，以便入味。</p></li><li><p>生姜切片，大葱切段备用。</p></li><li><p>在锅中加入适量的油，热锅冷油可以防止鸡翅皮粘锅。(ps记得把鸡翅水吸干），加入生姜片炒香。</p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/%E5%8F%AF%E4%B9%90%E9%B8%A1%E7%BF%8501.jpg" style="zoom:50%;" /></li><li><p>接着，把鸡翅放入锅中两面煎炒（ps把生姜片夹出），煎至两面微黄色。</p></li><li><p>加入两勺糖继续炒，炒至糖溶化并裹在鸡翅上，鸡翅色泽变深。</p></li><li><p>倒入适量的料酒，用中小火慢慢翻煎，让鸡翅充分吸收料酒的香味。</p></li><li><p>加入适量的生抽和老抽翻煎均匀，使鸡翅充分上色。</p></li><li><p>倒入一罐可乐（大约330ml），加入葱段，用中小火烧煮15-20分钟。</p><p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/%E5%8F%AF%E4%B9%90%E9%B8%A1%E7%BF%8502.jpg"></p></li><li><p>最后，撇去浮沫，调入适量的盐炖煮至汤汁变粘稠即可。</p></li></ol>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E5%8E%A8%E6%88%BF/">厨房</category>
      
      
      <category domain="http://example.com/tags/%E4%B8%8B%E5%8E%A8%E6%88%BF/">下厨房</category>
      
      
      <comments>http://example.com/2023/ke-le-ji-chi/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>selenium4.0更新</title>
      <link>http://example.com/2023/selenium/</link>
      <guid>http://example.com/2023/selenium/</guid>
      <pubDate>Wed, 22 Mar 2023 16:00:00 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;selenium4-0&quot;&gt;&lt;a href=&quot;#selenium4-0&quot; class=&quot;headerlink&quot; title=&quot;selenium4.0&quot;&gt;&lt;/a&gt;selenium4.0&lt;/h1&gt;&lt;p&gt;Selenium 4 已经到来，将至少需要 &lt;strong&gt;Python 3.7 或更高版本。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下面介绍一下基础的语法格式&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="selenium4-0"><a href="#selenium4-0" class="headerlink" title="selenium4.0"></a>selenium4.0</h1><p>Selenium 4 已经到来，将至少需要 <strong>Python 3.7 或更高版本。</strong></p><p>下面介绍一下基础的语法格式</p><span id="more"></span><h2 id="1、初始化浏览器、刷新、最大化、后退、前进、截图"><a href="#1、初始化浏览器、刷新、最大化、后退、前进、截图" class="headerlink" title="1、初始化浏览器、刷新、最大化、后退、前进、截图"></a>1、初始化浏览器、刷新、最大化、后退、前进、截图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化浏览器为谷歌浏览器</span></span><br><span class="line"><span class="built_in">chr</span>=webdriver.Chrome()</span><br><span class="line"><span class="comment"># 无界面的浏览器</span></span><br><span class="line"><span class="comment"># option = webdriver.ChromeOptions()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># option.add_argument(&quot;headless&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chr = webdriver.Chrome(options=option)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#浏览器最大化</span></span><br><span class="line"><span class="built_in">chr</span>.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="built_in">chr</span>.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># chr.get(&quot;https://www.jd.com/&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#后退</span></span><br><span class="line"><span class="built_in">chr</span>.back()</span><br><span class="line"><span class="comment">#暂停2s</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#前进</span></span><br><span class="line"><span class="built_in">chr</span>.forward()</span><br><span class="line"><span class="comment">#刷新</span></span><br><span class="line"><span class="built_in">chr</span>.refresh()</span><br><span class="line"><span class="comment">#截图</span></span><br><span class="line"><span class="built_in">chr</span>.get_screenshot_as_file(<span class="string">&#x27;截图.png&#x27;</span>)</span><br><span class="line"><span class="comment">#点击</span></span><br><span class="line"><span class="built_in">chr</span>.find_element(By.ID,<span class="string">&#x27;kw&#x27;</span>).click()</span><br><span class="line"><span class="comment">#输入</span></span><br><span class="line"><span class="built_in">chr</span>.find_element(By.ID,<span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&quot;saa&quot;</span>)</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#清除输入框内容</span></span><br><span class="line"><span class="built_in">chr</span>.find_element(By.ID,<span class="string">&#x27;kw&#x27;</span>).clear()</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"><span class="comment">#关闭浏览器</span></span><br><span class="line"><span class="built_in">chr</span>.close()</span><br></pre></td></tr></table></figure><h2 id="2、单个元素定位的方法"><a href="#2、单个元素定位的方法" class="headerlink" title="2、单个元素定位的方法"></a>2、单个元素定位的方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">selenium4使用的时候需要导入模块    <span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">find_element(By.XPATH, <span class="string">&quot;//*[@id=&#x27;search&#x27;]&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.CLASS_NAME, <span class="string">&quot;element_class_name&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.ID,<span class="string">&quot;element_id&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.NAME, <span class="string">&quot;element_name&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.LINK_TEXT,<span class="string">&quot;element_link_text&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.CSS_SELECTOR, <span class="string">&quot;element_css_selector&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.TAG_NAME, <span class="string">&quot;element_tag_name&quot;</span>)</span><br><span class="line"></span><br><span class="line">find_element(By.PARTIAL_LINK_TEXT, <span class="string">&quot;element_partial_link_text&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="3、多个元素定位的方法"><a href="#3、多个元素定位的方法" class="headerlink" title="3、多个元素定位的方法"></a>3、多个元素定位的方法</h2><p>与单个元素的定位方式类似，把find_element改成find_elements即可</p><h2 id="4、定位select类型的下拉框"><a href="#4、定位select类型的下拉框" class="headerlink" title="4、定位select类型的下拉框"></a>4、定位select类型的下拉框</h2><p>4、定位select类型的下拉框</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select_by_index()           <span class="comment"># 通过索引定位；注意：&gt;index索引是从“0”开始。</span></span><br><span class="line">select_by_value()           <span class="comment"># 通过value值定位，va&gt;lue标签的属性值。</span></span><br><span class="line">select_by_visible_text()    <span class="comment"># 通过文本值定位，即显&gt;示在下拉框的值。</span></span><br><span class="line">Select(<span class="built_in">chr</span>.find_element_by_name(<span class="string">&quot;姓名&quot;</span>)).select_by_index(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>或者分开写</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="built_in">chr</span>.find_element_by_name(<span class="string">&quot;姓名&quot;</span>)</span><br><span class="line"></span><br><span class="line">Select(a).select_by_index(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="5、多窗口切换"><a href="#5、多窗口切换" class="headerlink" title="5、多窗口切换"></a>5、多窗口切换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">current_window_handle：获取当前窗口的句柄</span><br><span class="line"></span><br><span class="line">window_handles：返回当前浏览器的所有窗口的句柄</span><br><span class="line"></span><br><span class="line">switch_to_window()：用于切换到对应的窗口</span><br><span class="line"></span><br><span class="line"><span class="built_in">chr</span>.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span><br><span class="line">a=<span class="built_in">chr</span>.current_window_handle</span><br><span class="line"><span class="built_in">chr</span>.execute_script(<span class="string">&#x27;window.open()&#x27;</span>)</span><br><span class="line"><span class="built_in">chr</span>.switch_to.window(<span class="built_in">chr</span>.window_handles[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">chr</span>.get(<span class="string">&quot;https://www.jd.com/&quot;</span>)</span><br><span class="line"><span class="comment"># chr.switch_to.window(chr.window_handles[0])</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">chr</span>.switch_to.window(a)</span><br></pre></td></tr></table></figure><h2 id="6、iframe切换"><a href="#6、iframe切换" class="headerlink" title="6、iframe切换"></a>6、iframe切换</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.frame(driver.find_element_by_xpath(<span class="string">&quot;//iframe[contains(@src,&#x27;myframe&#x27;)]&quot;</span>))</span><br></pre></td></tr></table></figure><p>#回到默认的iframe</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.default_content()</span><br></pre></td></tr></table></figure><h2 id="7、键盘操作"><a href="#7、键盘操作" class="headerlink" title="7、键盘操作"></a>7、键盘操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">send_keys(Keys.BACK_SPACE)：删除键(BackSpace)</span><br><span class="line"></span><br><span class="line">send_keys(Keys.SPACE)：空格键(Space)</span><br><span class="line"></span><br><span class="line">send_keys(Keys.TAB)：制表键(TAB)</span><br><span class="line"></span><br><span class="line">send_keys(Keys.ESCAPE)：回退键(ESCAPE)</span><br><span class="line"></span><br><span class="line">send_keys(Keys.ENTER)：回车键(ENTER)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E6%B5%8B%E8%AF%95/">测试</category>
      
      
      <category domain="http://example.com/tags/%E6%B5%8B%E8%AF%95/">测试</category>
      
      <category domain="http://example.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/">自动化测试</category>
      
      
      <comments>http://example.com/2023/selenium/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Mysql语法</title>
      <link>http://example.com/2022/mysql/</link>
      <guid>http://example.com/2022/mysql/</guid>
      <pubDate>Sat, 19 Nov 2022 16:00:00 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h1&gt;&lt;h2 id=&quot;通用语法及分类&quot;&gt;&lt;a href=&quot;#通用语法及分类&quot; class=&quot;headerlink&quot; title=&quot;通用语法及分类&quot;&gt;&lt;/a&gt;通用语法及分类&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DML: 数据操作语言，用来对数据库表中的数据进行增删改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DQL: 数据查询语言，用来查询数据库中表的记录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h2 id="通用语法及分类"><a href="#通用语法及分类" class="headerlink" title="通用语法及分类"></a>通用语法及分类</h2><ul><li><p>DDL: 数据定义语言，用来定义数据库对象（数据库、表、字段）</p></li><li><p>DML: 数据操作语言，用来对数据库表中的数据进行增删改</p></li><li><p>DQL: 数据查询语言，用来查询数据库中表的记录</p></li><li><p>DCL: 数据控制语言，用来创建数据库用户、控制数据库的控制权限</p><span id="more"></span></li></ul><h3 id="DDL（数据定义语言）"><a href="#DDL（数据定义语言）" class="headerlink" title="DDL（数据定义语言）"></a>DDL（数据定义语言）</h3><p>数据定义语言</p><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p>查询所有数据库：<br><code>SHOW DATABASES;</code><br>查询当前数据库：<br><code>SELECT DATABASE();</code><br>创建数据库：<br><code>CREATE DATABASE [ IF NOT EXISTS ] 数据库名 [ DEFAULT CHARSET 字符集] [COLLATE 排序规则 ];</code><br>删除数据库：<br><code>DROP DATABASE [ IF EXISTS ] 数据库名;</code><br>使用数据库：<br><code>USE 数据库名;</code></p><h5 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>UTF8字符集长度为3字节，有些符号占4字节，所以推荐用utf8mb4字符集</li></ul><h4 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h4><p>查询当前数据库所有表：<br><code>SHOW TABLES;</code><br>查询表结构：<br><code>DESC 表名;</code><br>查询指定表的建表语句：<br><code>SHOW CREATE TABLE 表名;</code></p><p>创建表：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">字段1 字段1类型 [COMMENT 字段1注释],</span><br><span class="line">字段2 字段2类型 [COMMENT 字段2注释],</span><br><span class="line">字段3 字段3类型 [COMMENT 字段3注释],</span><br><span class="line">...</span><br><span class="line">字段n 字段n类型 [COMMENT 字段n注释]</span><br><span class="line">)[ COMMENT 表注释 ];</span><br></pre></td></tr></table></figure><p><strong>最后一个字段后面没有逗号</strong></p><p>添加字段：<br><code>ALTER TABLE 表名 ADD 字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：<code>ALTER TABLE emp ADD nickname varchar(20) COMMENT &#39;昵称&#39;;</code></p><p>修改数据类型：<br><code>ALTER TABLE 表名 MODIFY 字段名 新数据类型(长度);</code><br>修改字段名和字段类型：<br><code>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型(长度) [COMMENT 注释] [约束];</code><br>例：将emp表的nickname字段修改为username，类型为varchar(30)<br><code>ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT &#39;昵称&#39;;</code></p><p>删除字段：<br><code>ALTER TABLE 表名 DROP 字段名;</code></p><p>修改表名：<br><code>ALTER TABLE 表名 RENAME TO 新表名</code></p><p>删除表：<br><code>DROP TABLE [IF EXISTS] 表名;</code><br>删除表，并重新创建该表：<br><code>TRUNCATE TABLE 表名;</code></p><h3 id="DML（数据操作语言）"><a href="#DML（数据操作语言）" class="headerlink" title="DML（数据操作语言）"></a>DML（数据操作语言）</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><p>指定字段：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</code><br>全部字段：<br><code>INSERT INTO 表名 VALUES (值1, 值2, ...);</code></p><p>批量添加数据：<br><code>INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code><br><code>INSERT INTO 表名 VALUES (值1, 值2, ...), (值1, 值2, ...), (值1, 值2, ...);</code></p><h5 id="注意事项-1"><a href="#注意事项-1" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>字符串和日期类型数据应该包含在引号中</li><li>插入的数据大小应该在字段的规定范围内</li></ul><h4 id="更新和删除数据"><a href="#更新和删除数据" class="headerlink" title="更新和删除数据"></a>更新和删除数据</h4><p>修改数据：<br><code>UPDATE 表名 SET 字段名1 = 值1, 字段名2 = 值2, ... [ WHERE 条件 ];</code><br>例：<br><code>UPDATE emp SET name = &#39;Jack&#39; WHERE id = 1;</code></p><p>删除数据：<br><code>DELETE FROM 表名 [ WHERE 条件 ];</code></p><h3 id="DQL（数据查询语言）"><a href="#DQL（数据查询语言）" class="headerlink" title="DQL（数据查询语言）"></a>DQL（数据查询语言）</h3><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">字段列表</span><br><span class="line">FROM</span><br><span class="line">表名字段</span><br><span class="line">WHERE</span><br><span class="line">条件列表</span><br><span class="line">GROUP BY</span><br><span class="line">分组字段列表</span><br><span class="line">HAVING</span><br><span class="line">分组后的条件列表</span><br><span class="line">ORDER BY</span><br><span class="line">排序字段列表</span><br><span class="line">LIMIT</span><br><span class="line">分页参数</span><br></pre></td></tr></table></figure><h4 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h4><p>查询多个字段：<br><code>SELECT 字段1, 字段2, 字段3, ... FROM 表名;</code><br><code>SELECT * FROM 表名;</code></p><p>设置别名：<br><code>SELECT 字段1 [ AS 别名1 ], 字段2 [ AS 别名2 ], 字段3 [ AS 别名3 ], ... FROM 表名;</code><br><code>SELECT 字段1 [ 别名1 ], 字段2 [ 别名2 ], 字段3 [ 别名3 ], ... FROM 表名;</code></p><p>去除重复记录：<br><code>SELECT DISTINCT 字段列表 FROM 表名;</code></p><p>转义：<br><code>SELECT * FROM 表名 WHERE name LIKE &#39;/_张三&#39; ESCAPE &#39;/&#39;</code><br>&#x2F; 之后的_不作为通配符</p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 WHERE 条件列表;</code></p><p>条件：</p><table><thead><tr><th>比较运算符</th><th>功能</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td></tr><tr><td>&#x3D;</td><td>等于</td></tr><tr><td>&lt;&gt; 或 !&#x3D;</td><td>不等于</td></tr><tr><td>BETWEEN … AND …</td><td>在某个范围内（含最小、最大值）</td></tr><tr><td>IN(…)</td><td>在in之后的列表中的值，多选一</td></tr><tr><td>LIKE 占位符</td><td>模糊匹配（_匹配单个字符，%匹配任意个字符）</td></tr><tr><td>IS NULL</td><td>是NULL</td></tr></tbody></table><table><thead><tr><th>逻辑运算符</th><th>功能</th></tr></thead><tbody><tr><td>AND 或 &amp;&amp;</td><td>并且（多个条件同时成立）</td></tr><tr><td>OR 或 &amp;#124;&amp;#124;</td><td>或者（多个条件任意一个成立）</td></tr><tr><td>NOT 或 !</td><td>非，不是</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-- 年龄等于30</span><br><span class="line">select * from employee where age = 30;</span><br><span class="line">-- 年龄小于30</span><br><span class="line">select * from employee where age &lt; 30;</span><br><span class="line">-- 小于等于</span><br><span class="line">select * from employee where age &lt;= 30;</span><br><span class="line">-- 没有身份证</span><br><span class="line">select * from employee where idcard is null or idcard = &#x27;&#x27;;</span><br><span class="line">-- 有身份证</span><br><span class="line">select * from employee where idcard;</span><br><span class="line">select * from employee where idcard is not null;</span><br><span class="line">-- 不等于</span><br><span class="line">select * from employee where age != 30;</span><br><span class="line">-- 年龄在20到30之间</span><br><span class="line">select * from employee where age between 20 and 30;</span><br><span class="line">select * from employee where age &gt;= 20 and age &lt;= 30;</span><br><span class="line">-- 下面语句不报错，但查不到任何信息</span><br><span class="line">select * from employee where age between 30 and 20;</span><br><span class="line">-- 性别为女且年龄小于30</span><br><span class="line">select * from employee where age &lt; 30 and gender = &#x27;女&#x27;;</span><br><span class="line">-- 年龄等于25或30或35</span><br><span class="line">select * from employee where age = 25 or age = 30 or age = 35;</span><br><span class="line">select * from employee where age in (25, 30, 35);</span><br><span class="line">-- 姓名为两个字</span><br><span class="line">select * from employee where name like &#x27;__&#x27;;</span><br><span class="line">-- 身份证最后为X</span><br><span class="line">select * from employee where idcard like &#x27;%X&#x27;;</span><br></pre></td></tr></table></figure><h4 id="聚合查询（聚合函数）"><a href="#聚合查询（聚合函数）" class="headerlink" title="聚合查询（聚合函数）"></a>聚合查询（聚合函数）</h4><p>常见聚合函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计数量</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table><p>语法：<br><code>SELECT 聚合函数(字段列表) FROM 表名;</code><br>例：<br><code>SELECT count(id) from employee where workaddress = &quot;广东省&quot;;</code></p><h4 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组后的过滤条件 ];</code></p><p>where 和 having 的区别：</p><ul><li>执行时机不同：where是分组之前进行过滤，不满足where条件不参与分组；having是分组后对结果进行过滤。</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以。</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 根据性别分组，统计男性和女性数量（只显示分组数量，不显示哪个是男哪个是女）</span><br><span class="line">select count(*) from employee group by gender;</span><br><span class="line">-- 根据性别分组，统计男性和女性数量</span><br><span class="line">select gender, count(*) from employee group by gender;</span><br><span class="line">-- 根据性别分组，统计男性和女性的平均年龄</span><br><span class="line">select gender, avg(age) from employee group by gender;</span><br><span class="line">-- 年龄小于45，并根据工作地址分组</span><br><span class="line">select workaddress, count(*) from employee where age &lt; 45 group by workaddress;</span><br><span class="line">-- 年龄小于45，并根据工作地址分组，获取员工数量大于等于3的工作地址</span><br><span class="line">select workaddress, count(*) address_count from employee where age &lt; 45 group by workaddress having address_count &gt;= 3;</span><br></pre></td></tr></table></figure><h5 id="注意事项-2"><a href="#注意事项-2" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>执行顺序：where &gt; 聚合函数 &gt; having</li><li>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义</li></ul><h4 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1, 字段2 排序方式2;</code></p><p>排序方式：</p><ul><li>ASC: 升序（默认）</li><li>DESC: 降序</li></ul><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 根据年龄升序排序</span><br><span class="line">SELECT * FROM employee ORDER BY age ASC;</span><br><span class="line">SELECT * FROM employee ORDER BY age;</span><br><span class="line">-- 两字段排序，根据年龄升序排序，入职时间降序排序</span><br><span class="line">SELECT * FROM employee ORDER BY age ASC, entrydate DESC;</span><br></pre></td></tr></table></figure><h5 id="注意事项-3"><a href="#注意事项-3" class="headerlink" title="注意事项"></a>注意事项</h5><p>如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序</p><h4 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h4><p>语法：<br><code>SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询第一页数据，展示10条</span><br><span class="line">SELECT * FROM employee LIMIT 0, 10;</span><br><span class="line">-- 查询第二页</span><br><span class="line">SELECT * FROM employee LIMIT 10, 10;</span><br></pre></td></tr></table></figure><h5 id="注意事项-4"><a href="#注意事项-4" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>起始索引从0开始，起始索引 &#x3D; （查询页码 - 1） * 每页显示记录数</li><li>分页查询是数据库的方言，不同数据库有不同实现，MySQL是LIMIT</li><li>如果查询的是第一页数据，起始索引可以省略，直接简写 LIMIT 10</li></ul><h4 id="DQL执行顺序"><a href="#DQL执行顺序" class="headerlink" title="DQL执行顺序"></a>DQL执行顺序</h4><p>FROM -&gt; WHERE -&gt; GROUP BY -&gt; SELECT -&gt; ORDER BY -&gt; LIMIT</p><h3 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h3><h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><p>查询用户：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line">SELECT * FROM user;</span><br></pre></td></tr></table></figure><p>创建用户:<br><code>CREATE USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED BY &#39;密码&#39;;</code></p><p>修改用户密码：<br><code>ALTER USER &#39;用户名&#39;@&#39;主机名&#39; IDENTIFIED WITH mysql_native_password BY &#39;新密码&#39;;</code></p><p>删除用户：<br><code>DROP USER &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 创建用户test，只能在当前主机localhost访问</span><br><span class="line">create user &#x27;test&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">-- 创建用户test，能在任意主机访问</span><br><span class="line">create user &#x27;test&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">create user &#x27;test&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">-- 修改密码</span><br><span class="line">alter user &#x27;test&#x27;@&#x27;localhost&#x27; identified with mysql_native_password by &#x27;1234&#x27;;</span><br><span class="line">-- 删除用户</span><br><span class="line">drop user &#x27;test&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure><h5 id="注意事项-5"><a href="#注意事项-5" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>主机名可以使用 % 通配</li></ul><h4 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h4><p>常用权限：</p><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>ALL, ALL PRIVILEGES</td><td>所有权限</td></tr><tr><td>SELECT</td><td>查询数据</td></tr><tr><td>INSERT</td><td>插入数据</td></tr><tr><td>UPDATE</td><td>修改数据</td></tr><tr><td>DELETE</td><td>删除数据</td></tr><tr><td>ALTER</td><td>修改表</td></tr><tr><td>DROP</td><td>删除数据库&#x2F;表&#x2F;视图</td></tr><tr><td>CREATE</td><td>创建数据库&#x2F;表</td></tr></tbody></table><p>更多权限请看<a href="#%E6%9D%83%E9%99%90%E4%B8%80%E8%A7%88%E8%A1%A8" title="权限一览表">权限一览表</a></p><p>查询权限：<br><code>SHOW GRANTS FOR &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>授予权限：<br><code>GRANT 权限列表 ON 数据库名.表名 TO &#39;用户名&#39;@&#39;主机名&#39;;</code></p><p>撤销权限：<br><code>REVOKE 权限列表 ON 数据库名.表名 FROM &#39;用户名&#39;@&#39;主机名&#39;;</code></p><h5 id="注意事项-6"><a href="#注意事项-6" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>多个权限用逗号分隔</li><li>授权时，数据库名和表名可以用 * 进行通配，代表所有</li></ul><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>字符串函数</li><li>数值函数</li><li>日期函数</li><li>流程函数</li></ul><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><p>常用函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CONCAT(s1, s2, …, sn)</td><td>字符串拼接，将s1, s2, …, sn拼接成一个字符串</td></tr><tr><td>LOWER(str)</td><td>将字符串全部转为小写</td></tr><tr><td>UPPER(str)</td><td>将字符串全部转为大写</td></tr><tr><td>LPAD(str, n, pad)</td><td>左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>RPAD(str, n, pad)</td><td>右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>TRIM(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>SUBSTRING(str, start, len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr><tr><td>REPLACE(column, source, replace)</td><td>替换字符串</td></tr></tbody></table><p>使用示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-- 拼接</span><br><span class="line">SELECT CONCAT(&#x27;Hello&#x27;, &#x27;World&#x27;);</span><br><span class="line">-- 小写</span><br><span class="line">SELECT LOWER(&#x27;Hello&#x27;);</span><br><span class="line">-- 大写</span><br><span class="line">SELECT UPPER(&#x27;Hello&#x27;);</span><br><span class="line">-- 左填充</span><br><span class="line">SELECT LPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class="line">-- 右填充</span><br><span class="line">SELECT RPAD(&#x27;01&#x27;, 5, &#x27;-&#x27;);</span><br><span class="line">-- 去除空格</span><br><span class="line">SELECT TRIM(&#x27; Hello World &#x27;);</span><br><span class="line">-- 切片（起始索引为1）</span><br><span class="line">SELECT SUBSTRING(&#x27;Hello World&#x27;, 1, 5);</span><br></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><p>常见函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CEIL(x)</td><td>向上取整</td></tr><tr><td>FLOOR(x)</td><td>向下取整</td></tr><tr><td>MOD(x, y)</td><td>返回x&#x2F;y的模</td></tr><tr><td>RAND()</td><td>返回0~1内的随机数</td></tr><tr><td>ROUND(x, y)</td><td>求参数x的四舍五入值，保留y位小数</td></tr></tbody></table><h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p>常用函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>CURDATE()</td><td>返回当前日期</td></tr><tr><td>CURTIME()</td><td>返回当前时间</td></tr><tr><td>NOW()</td><td>返回当前日期和时间</td></tr><tr><td>YEAR(date)</td><td>获取指定date的年份</td></tr><tr><td>MONTH(date)</td><td>获取指定date的月份</td></tr><tr><td>DAY(date)</td><td>获取指定date的日期</td></tr><tr><td>DATE_ADD(date, INTERVAL expr type)</td><td>返回一个日期&#x2F;时间值加上一个时间间隔expr后的时间值</td></tr><tr><td>DATEDIFF(date1, date2)</td><td>返回起始时间date1和结束时间date2之间的天数</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- DATE_ADD</span><br><span class="line">SELECT DATE_ADD(NOW(), INTERVAL 70 YEAR);</span><br></pre></td></tr></table></figure><h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><p>常用函数：</p><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>IF(value, t, f)</td><td>如果value为true，则返回t，否则返回f</td></tr><tr><td>IFNULL(value1, value2)</td><td>如果value1不为空，返回value1，否则返回value2</td></tr><tr><td>CASE WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td><td>如果val1为true，返回res1，… 否则返回default默认值</td></tr><tr><td>CASE [ expr ] WHEN [ val1 ] THEN [ res1 ] … ELSE [ default ] END</td><td>如果expr的值等于val1，返回res1，… 否则返回default默认值</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">name,</span><br><span class="line">(case when age &gt; 30 then &#x27;中年&#x27; else &#x27;青年&#x27; end)</span><br><span class="line">from employee;</span><br><span class="line">select</span><br><span class="line">name,</span><br><span class="line">(case workaddress when &#x27;北京市&#x27; then &#x27;一线城市&#x27; when &#x27;上海市&#x27; then &#x27;一线城市&#x27; else &#x27;二线城市&#x27; end) as &#x27;工作地址&#x27;</span><br><span class="line">from employee;</span><br></pre></td></tr></table></figure><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p>分类：</p><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段的数据不能为null</td><td>NOT NULL</td></tr><tr><td>唯一约束</td><td>保证该字段的所有数据都是唯一、不重复的</td><td>UNIQUE</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>PRIMARY KEY</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段的值，则采用默认值</td><td>DEFAULT</td></tr><tr><td>检查约束（8.0.1版本后）</td><td>保证字段值满足某一个条件</td><td>CHECK</td></tr><tr><td>外键约束</td><td>用来让两张图的数据之间建立连接，保证数据的一致性和完整性</td><td>FOREIGN KEY</td></tr></tbody></table><p>约束是作用于表中字段上的，可以再创建表&#x2F;修改表的时候添加约束。</p><h3 id="常用约束"><a href="#常用约束" class="headerlink" title="常用约束"></a>常用约束</h3><table><thead><tr><th>约束条件</th><th>关键字</th></tr></thead><tbody><tr><td>主键</td><td>PRIMARY KEY</td></tr><tr><td>自动增长</td><td>AUTO_INCREMENT</td></tr><tr><td>不为空</td><td>NOT NULL</td></tr><tr><td>唯一</td><td>UNIQUE</td></tr><tr><td>逻辑条件</td><td>CHECK</td></tr><tr><td>默认值</td><td>DEFAULT</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create table user(</span><br><span class="line">id int primary key auto_increment,</span><br><span class="line">name varchar(10) not null unique,</span><br><span class="line">age int check(age &gt; 0 and age &lt; 120),</span><br><span class="line">status char(1) default &#x27;1&#x27;,</span><br><span class="line">gender char(1)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><p>添加外键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">字段名 字段类型,</span><br><span class="line">...</span><br><span class="line">[CONSTRAINT] [外键名称] FOREIGN KEY(外键字段名) REFERENCES 主表(主表列名)</span><br><span class="line">);</span><br><span class="line">ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段名) REFERENCES 主表(主表列名);</span><br><span class="line"></span><br><span class="line">-- 例子</span><br><span class="line">alter table emp add constraint fk_emp_dept_id foreign key(dept_id) references dept(id);</span><br></pre></td></tr></table></figure><p>删除外键：<br><code>ALTER TABLE 表名 DROP FOREIGN KEY 外键名;</code></p><h4 id="删除-x2F-更新行为"><a href="#删除-x2F-更新行为" class="headerlink" title="删除&#x2F;更新行为"></a>删除&#x2F;更新行为</h4><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>NO ACTION</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新（与RESTRICT一致）</td></tr><tr><td>RESTRICT</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新（与NO ACTION一致）</td></tr><tr><td>CASCADE</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则也删除&#x2F;更新外键在子表中的记录</td></tr><tr><td>SET NULL</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（要求该外键允许为null）</td></tr><tr><td>SET DEFAULT</td><td>父表有变更时，子表将外键设为一个默认值（Innodb不支持）</td></tr></tbody></table><p>更改删除&#x2F;更新行为：<br><code>ALTER TABLE 表名 ADD CONSTRAINT 外键名称 FOREIGN KEY (外键字段) REFERENCES 主表名(主表字段名) ON UPDATE 行为 ON DELETE 行为;</code></p><h2 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h2><h3 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h3><ul><li>一对多（多对一）</li><li>多对多</li><li>一对一</li></ul><h4 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h4><p>案例：部门与员工<br>关系：一个部门对应多个员工，一个员工对应一个部门<br>实现：在多的一方建立外键，指向一的一方的主键</p><h4 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h4><p>案例：学生与课程<br>关系：一个学生可以选多门课程，一门课程也可以供多个学生选修<br>实现：建立第三张中间表，中间表至少包含两个外键，分别关联两方主键</p><h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><p>案例：用户与用户详情<br>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另一张表中，以提升操作效率<br>实现：在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的（UNIQUE）</p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p>合并查询（笛卡尔积，会展示所有组合结果）：<br><code>select * from employee, dept;</code></p><blockquote><p>笛卡尔积：两个集合A集合和B集合的所有组合情况（在多表查询时，需要消除无效的笛卡尔积）</p></blockquote><p>消除无效笛卡尔积：<br><code>select * from employee, dept where employee.dept = dept.id;</code></p><h3 id="内连接查询"><a href="#内连接查询" class="headerlink" title="内连接查询"></a>内连接查询</h3><p>内连接查询的是两张表交集的部分</p><p>隐式内连接：<br><code>SELECT 字段列表 FROM 表1, 表2 WHERE 条件 ...;</code></p><p>显式内连接：<br><code>SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ...;</code></p><p>显式性能比隐式高</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工姓名，及关联的部门的名称</span><br><span class="line">-- 隐式</span><br><span class="line">select e.name, d.name from employee as e, dept as d where e.dept = d.id;</span><br><span class="line">-- 显式</span><br><span class="line">select e.name, d.name from employee as e inner join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure><h3 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a>外连接查询</h3><p>左外连接：<br>查询左表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ...;</code><br>相当于查询表1的所有数据，包含表1和表2交集部分数据</p><p>右外连接：<br>查询右表所有数据，以及两张表交集部分数据<br><code>SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ...;</code></p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 左</span><br><span class="line">select e.*, d.name from employee as e left outer join dept as d on e.dept = d.id;</span><br><span class="line">select d.name, e.* from dept d left outer join emp e on e.dept = d.id;  -- 这条语句与下面的语句效果一样</span><br><span class="line">-- 右</span><br><span class="line">select d.name, e.* from employee as e right outer join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure><p>左连接可以查询到没有dept的employee，右连接可以查询到没有employee的dept</p><h3 id="自连接查询"><a href="#自连接查询" class="headerlink" title="自连接查询"></a>自连接查询</h3><p>当前表与自身的连接查询，自连接必须使用表别名</p><p>语法：<br><code>SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ...;</code></p><p>自连接查询，可以是内连接查询，也可以是外连接查询</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询员工及其所属领导的名字</span><br><span class="line">select a.name, b.name from employee a, employee b where a.manager = b.id;</span><br><span class="line">-- 没有领导的也查询出来</span><br><span class="line">select a.name, b.name from employee a left join employee b on a.manager = b.id;</span><br></pre></td></tr></table></figure><h3 id="联合查询-union-union-all"><a href="#联合查询-union-union-all" class="headerlink" title="联合查询 union, union all"></a>联合查询 union, union all</h3><p>把多次查询的结果合并，形成一个新的查询集</p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表A ...</span><br><span class="line">UNION [ALL]</span><br><span class="line">SELECT 字段列表 FROM 表B ...</span><br></pre></td></tr></table></figure><h4 id="注意事项-7"><a href="#注意事项-7" class="headerlink" title="注意事项"></a>注意事项</h4><ul><li>UNION ALL 会有重复结果，UNION 不会</li><li>联合查询比使用or效率高，不会使索引失效</li></ul><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><p>SQL语句中嵌套SELECT语句，称谓嵌套查询，又称子查询。<br><code>SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2);</code><br><strong>子查询外部的语句可以是 INSERT &#x2F; UPDATE &#x2F; DELETE &#x2F; SELECT 的任何一个</strong></p><p>根据子查询结果可以分为：</p><ul><li>标量子查询（子查询结果为单个值）</li><li>列子查询（子查询结果为一列）</li><li>行子查询（子查询结果为一行）</li><li>表子查询（子查询结果为多行多列）</li></ul><p>根据子查询位置可分为：</p><ul><li>WHERE 之后</li><li>FROM 之后</li><li>SELECT 之后</li></ul><h4 id="标量子查询"><a href="#标量子查询" class="headerlink" title="标量子查询"></a>标量子查询</h4><p>子查询返回的结果是单个值（数字、字符串、日期等）。<br>常用操作符：- &lt; &gt; &gt; &gt;&#x3D; &lt; &lt;&#x3D;</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- 查询销售部所有员工</span><br><span class="line">select id from dept where name = &#x27;销售部&#x27;;</span><br><span class="line">-- 根据销售部部门ID，查询员工信息</span><br><span class="line">select * from employee where dept = 4;</span><br><span class="line">-- 合并（子查询）</span><br><span class="line">select * from employee where dept = (select id from dept where name = &#x27;销售部&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查询xxx入职之后的员工信息</span><br><span class="line">select * from employee where entrydate &gt; (select entrydate from employee where name = &#x27;xxx&#x27;);</span><br></pre></td></tr></table></figure><h4 id="列子查询"><a href="#列子查询" class="headerlink" title="列子查询"></a>列子查询</h4><p>返回的结果是一列（可以是多行）。</p><p>常用操作符：</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>IN</td><td>在指定的集合范围内，多选一</td></tr><tr><td>NOT IN</td><td>不在指定的集合范围内</td></tr><tr><td>ANY</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>SOME</td><td>与ANY等同，使用SOME的地方都可以使用ANY</td></tr><tr><td>ALL</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 查询销售部和市场部的所有员工信息</span><br><span class="line">select * from employee where dept in (select id from dept where name = &#x27;销售部&#x27; or name = &#x27;市场部&#x27;);</span><br><span class="line">-- 查询比财务部所有人工资都高的员工信息</span><br><span class="line">select * from employee where salary &gt; all(select salary from employee where dept = (select id from dept where name = &#x27;财务部&#x27;));</span><br><span class="line">-- 查询比研发部任意一人工资高的员工信息</span><br><span class="line">select * from employee where salary &gt; any (select salary from employee where dept = (select id from dept where name = &#x27;研发部&#x27;));</span><br></pre></td></tr></table></figure><h4 id="行子查询"><a href="#行子查询" class="headerlink" title="行子查询"></a>行子查询</h4><p>返回的结果是一行（可以是多列）。<br>常用操作符：&#x3D;, &lt;, &gt;, IN, NOT IN</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 查询与xxx的薪资及直属领导相同的员工信息</span><br><span class="line">select * from employee where (salary, manager) = (12500, 1);</span><br><span class="line">select * from employee where (salary, manager) = (select salary, manager from employee where name = &#x27;xxx&#x27;);</span><br></pre></td></tr></table></figure><h4 id="表子查询"><a href="#表子查询" class="headerlink" title="表子查询"></a>表子查询</h4><p>返回的结果是多行多列<br>常用操作符：IN</p><p>例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 查询与xxx1，xxx2的职位和薪资相同的员工</span><br><span class="line">select * from employee where (job, salary) in (select job, salary from employee where name = &#x27;xxx1&#x27; or name = &#x27;xxx2&#x27;);</span><br><span class="line">-- 查询入职日期是2006-01-01之后的员工，及其部门信息</span><br><span class="line">select e.*, d.* from (select * from employee where entrydate &gt; &#x27;2006-01-01&#x27;) as e left join dept as d on e.dept = d.id;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>事务是一组操作的集合，事务会把所有操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。</p><p>基本操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">-- 1. 查询张三账户余额</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">-- 2. 将张三账户余额-1000</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">-- 此语句出错后张三钱减少但是李四钱没有增加</span><br><span class="line">模拟sql语句错误</span><br><span class="line">-- 3. 将李四账户余额+1000</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查看事务提交方式</span><br><span class="line">SELECT @@AUTOCOMMIT;</span><br><span class="line">-- 设置事务提交方式，1为自动提交，0为手动提交，该设置只对当前会话有效</span><br><span class="line">SET @@AUTOCOMMIT = 0;</span><br><span class="line">-- 提交事务</span><br><span class="line">COMMIT;</span><br><span class="line">-- 回滚事务</span><br><span class="line">ROLLBACK;</span><br><span class="line"></span><br><span class="line">-- 设置手动提交后上面代码改为：</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><p>操作方式二：</p><p>开启事务：<br><code>START TRANSACTION 或 BEGIN TRANSACTION;</code><br>提交事务：<br><code>COMMIT;</code><br>回滚事务：<br><code>ROLLBACK;</code></p><p>操作实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start transaction;</span><br><span class="line">select * from account where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money - 1000 where name = &#x27;张三&#x27;;</span><br><span class="line">update account set money = money + 1000 where name = &#x27;李四&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h3 id="四大特性ACID"><a href="#四大特性ACID" class="headerlink" title="四大特性ACID"></a>四大特性ACID</h3><ul><li>原子性(Atomicity)：事务是不可分割的最小操作但愿，要么全部成功，要么全部失败</li><li>一致性(Consistency)：事务完成时，必须使所有数据都保持一致状态</li><li>隔离性(Isolation)：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性(Durability)：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的</li></ul><h3 id="并发事务"><a href="#并发事务" class="headerlink" title="并发事务"></a>并发事务</h3><table><thead><tr><th>问题</th><th>描述</th></tr></thead><tbody><tr><td>脏读</td><td>一个事务读到另一个事务还没提交的数据</td></tr><tr><td>不可重复读</td><td>一个事务先后读取同一条记录，但两次读取的数据不同</td></tr><tr><td>幻读</td><td>一个事务按照条件查询数据时，没有对应的数据行，但是再插入数据时，又发现这行数据已经存在</td></tr></tbody></table><blockquote><p>这三个问题的详细演示：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=55cd</a> </p></blockquote><p>并发事务隔离级别：</p><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>Read uncommitted</td><td>√</td><td>√</td><td>√</td></tr><tr><td>Read committed</td><td>×</td><td>√</td><td>√</td></tr><tr><td>Repeatable Read(默认)</td><td>×</td><td>×</td><td>√</td></tr><tr><td>Serializable</td><td>×</td><td>×</td><td>×</td></tr></tbody></table><ul><li>√表示在当前隔离级别下该问题会出现</li><li>Serializable 性能最低；Read uncommitted 性能最高，数据安全性最差</li></ul><p>查看事务隔离级别：<br><code>SELECT @@TRANSACTION_ISOLATION;</code><br>设置事务隔离级别：<br><code>SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL &#123;READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE &#125;;</code><br>SESSION 是会话级别，表示只针对当前会话有效，GLOBAL 表示对所有会话有效</p><h1 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h1><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><p>MySQL体系结构：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84_20220315034329549927.png" alt="结构图" title="结构图"><br><img src="https://dhc.pythonanywhere.com/media/editor/MySQL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%B1%82%E7%BA%A7%E5%90%AB%E4%B9%89_20220315034359342837.png" alt="层级描述" title="层级描述"></p><p>存储引擎就是存储数据、建立索引、更新&#x2F;查询数据等技术的实现方式。存储引擎是基于表而不是基于库的，所以存储引擎也可以被称为表引擎。<br>默认存储引擎是InnoDB。</p><p>相关操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 查询建表语句</span><br><span class="line">show create table account;</span><br><span class="line">-- 建表时指定存储引擎</span><br><span class="line">CREATE TABLE 表名(</span><br><span class="line">...</span><br><span class="line">) ENGINE=INNODB;</span><br><span class="line">-- 查看当前数据库支持的存储引擎</span><br><span class="line">show engines;</span><br></pre></td></tr></table></figure><h3 id="InnoDB"><a href="#InnoDB" class="headerlink" title="InnoDB"></a>InnoDB</h3><p>InnoDB 是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB 是默认的 MySQL 引擎。</p><p>特点：</p><ul><li>DML 操作遵循 ACID 模型，支持<strong>事务</strong></li><li><strong>行级锁</strong>，提高并发访问性能</li><li>支持<strong>外键</strong>约束，保证数据的完整性和正确性</li></ul><p>文件：</p><ul><li>xxx.ibd: xxx代表表名，InnoDB 引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm、sdi）、数据和索引。</li></ul><p>参数：innodb_file_per_table，决定多张表共享一个表空间还是每张表对应一个表空间</p><p>知识点：</p><p>查看 Mysql 变量：<br><code>show variables like &#39;innodb_file_per_table&#39;;</code></p><p>从idb文件提取表结构数据：<br>（在cmd运行）<br><code>ibd2sdi xxx.ibd</code></p><p>InnoDB 逻辑存储结构：<br><img src="https://dhc.pythonanywhere.com/media/editor/%E9%80%BB%E8%BE%91%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84_20220316030616590001.png" alt="InnoDB逻辑存储结构" title="InnoDB逻辑存储结构"></p><h3 id="MyISAM"><a href="#MyISAM" class="headerlink" title="MyISAM"></a>MyISAM</h3><p>MyISAM 是 MySQL 早期的默认存储引擎。</p><p>特点：</p><ul><li>不支持事务，不支持外键</li><li>支持表锁，不支持行锁</li><li>访问速度快</li></ul><p>文件：</p><ul><li>xxx.sdi: 存储表结构信息</li><li>xxx.MYD: 存储数据</li><li>xxx.MYI: 存储索引</li></ul><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><p>Memory 引擎的表数据是存储在内存中的，受硬件问题、断电问题的影响，只能将这些表作为临时表或缓存使用。</p><p>特点：</p><ul><li>存放在内存中，速度快</li><li>hash索引（默认）</li></ul><p>文件：</p><ul><li>xxx.sdi: 存储表结构信息</li></ul><h3 id="存储引擎特点"><a href="#存储引擎特点" class="headerlink" title="存储引擎特点"></a>存储引擎特点</h3><table><thead><tr><th>特点</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>存储限制</td><td>64TB</td><td>有</td><td>有</td></tr><tr><td>事务安全</td><td>支持</td><td>-</td><td>-</td></tr><tr><td>锁机制</td><td>行锁</td><td>表锁</td><td>表锁</td></tr><tr><td>B+tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>-</td><td>-</td><td>支持</td></tr><tr><td>全文索引</td><td>支持（5.6版本之后）</td><td>支持</td><td>-</td></tr><tr><td>空间使用</td><td>高</td><td>低</td><td>N&#x2F;A</td></tr><tr><td>内存使用</td><td>高</td><td>低</td><td>中等</td></tr><tr><td>批量插入速度</td><td>低</td><td>高</td><td>高</td></tr><tr><td>支持外键</td><td>支持</td><td>-</td><td>-</td></tr></tbody></table><h3 id="存储引擎的选择"><a href="#存储引擎的选择" class="headerlink" title="存储引擎的选择"></a>存储引擎的选择</h3><p>在选择存储引擎时，应该根据应用系统的特点选择合适的存储引擎。对于复杂的应用系统，还可以根据实际情况选择多种存储引擎进行组合。</p><ul><li>InnoDB: 如果应用对事物的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，则 InnoDB 是比较合适的选择</li><li>MyISAM: 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不高，那这个存储引擎是非常合适的。</li><li>Memory: 将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。Memory 的缺陷是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性</li></ul><p>电商中的足迹和评论适合使用 MyISAM 引擎，缓存适合使用 Memory 引擎。</p><h2 id="性能分析"><a href="#性能分析" class="headerlink" title="性能分析"></a>性能分析</h2><h3 id="查看执行频次"><a href="#查看执行频次" class="headerlink" title="查看执行频次"></a>查看执行频次</h3><p>查看当前数据库的 INSERT, UPDATE, DELETE, SELECT 访问频次：<br><code>SHOW GLOBAL STATUS LIKE &#39;Com_______&#39;;</code> 或者 <code>SHOW SESSION STATUS LIKE &#39;Com_______&#39;;</code><br>例：<code>show global status like &#39;Com_______&#39;</code></p><h3 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h3><p>慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位：秒，默认10秒）的所有SQL语句的日志。<br>MySQL的慢查询日志默认没有开启，需要在MySQL的配置文件（&#x2F;etc&#x2F;my.cnf）中配置如下信息：<br>    # 开启慢查询日志开关<br>    slow_query_log&#x3D;1<br>    # 设置慢查询日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志<br>    long_query_time&#x3D;2<br>更改后记得重启MySQL服务，日志文件位置：&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;localhost-slow.log</p><p>查看慢查询日志开关状态：<br><code>show variables like &#39;slow_query_log&#39;;</code></p><h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a>profile</h3><p>show profile 能在做SQL优化时帮我们了解时间都耗费在哪里。通过 have_profiling 参数，能看到当前 MySQL 是否支持 profile 操作：<br><code>SELECT @@have_profiling;</code><br>profiling 默认关闭，可以通过set语句在session&#x2F;global级别开启 profiling：<br><code>SET profiling = 1;</code><br>查看所有语句的耗时：<br><code>show profiles;</code><br>查看指定query_id的SQL语句各个阶段的耗时：<br><code>show profile for query query_id;</code><br>查看指定query_id的SQL语句CPU的使用情况<br><code>show profile cpu for query query_id;</code></p><h3 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h3><p>EXPLAIN 或者 DESC 命令获取 MySQL 如何执行 SELECT 语句的信息，包括在 SELECT 语句执行过程中表如何连接和连接的顺序。<br>语法：<br>    # 直接在select语句之前加上关键字 explain &#x2F; desc<br>    EXPLAIN SELECT 字段列表 FROM 表名 HWERE 条件;</p><p>EXPLAIN 各字段含义：</p><ul><li>id：select 查询的序列号，表示查询中执行 select 子句或者操作表的顺序（id相同，执行顺序从上到下；id不同，值越大越先执行）</li><li>select_type：表示 SELECT 的类型，常见取值有 SIMPLE（简单表，即不适用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION中的第二个或者后面的查询语句）、SUBQUERY（SELECT&#x2F;WHERE之后包含了子查询）等</li><li>type：表示连接类型，性能由好到差的连接类型为 NULL、system、const、eq_ref、ref、range、index、all</li><li>possible_key：可能应用在这张表上的索引，一个或多个</li><li>Key：实际使用的索引，如果为 NULL，则没有使用索引</li><li>Key_len：表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好</li><li>rows：MySQL认为必须要执行的行数，在InnoDB引擎的表中，是一个估计值，可能并不总是准确的</li><li>filtered：表示返回结果的行数占需读取行数的百分比，filtered的值越大越好</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><p>索引是帮助 MySQL <strong>高效获取数据</strong>的<strong>数据结构（有序）</strong>。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查询算法，这种数据结构就是索引。</p><p>优缺点：</p><p>优点：</p><ul><li>提高数据检索效率，降低数据库的IO成本</li><li>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗</li></ul><p>缺点：</p><ul><li>索引列也是要占用空间的</li><li>索引大大提高了查询效率，但降低了更新的速度，比如 INSERT、UPDATE、DELETE</li></ul><h3 id="索引结构"><a href="#索引结构" class="headerlink" title="索引结构"></a>索引结构</h3><table><thead><tr><th>索引结构</th><th>描述</th></tr></thead><tbody><tr><td>B+Tree</td><td>最常见的索引类型，大部分引擎都支持B+树索引</td></tr><tr><td>Hash</td><td>底层数据结构是用哈希表实现，只有精确匹配索引列的查询才有效，不支持范围查询</td></tr><tr><td>R-Tree(空间索引)</td><td>空间索引是 MyISAM 引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少</td></tr><tr><td>Full-Text(全文索引)</td><td>是一种通过建立倒排索引，快速匹配文档的方式，类似于 Lucene, Solr, ES</td></tr></tbody></table><table><thead><tr><th>索引</th><th>InnoDB</th><th>MyISAM</th><th>Memory</th></tr></thead><tbody><tr><td>B+Tree索引</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>Hash索引</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>R-Tree索引</td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>Full-text</td><td>5.6版本后支持</td><td>支持</td><td>不支持</td></tr></tbody></table><h4 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h4><p><img src="https://dhc.pythonanywhere.com/media/editor/%E4%BA%8C%E5%8F%89%E6%A0%91_20220316153214227108.png" alt="二叉树" title="二叉树"></p><p>二叉树的缺点可以用红黑树来解决：<br><img src="https://dhc.pythonanywhere.com/media/editor/%E7%BA%A2%E9%BB%91%E6%A0%91_20220316163142686602.png" alt="红黑树" title="红黑树"><br>红黑树也存在大数据量情况下，层级较深，检索速度慢的问题。</p><p>为了解决上述问题，可以使用 B-Tree 结构。<br>B-Tree (多路平衡查找树) 以一棵最大度数（max-degree，指一个节点的子节点个数）为5（5阶）的 b-tree 为例（每个节点最多存储4个key，5个指针）</p><p><img src="https://dhc.pythonanywhere.com/media/editor/B-Tree%E7%BB%93%E6%9E%84_20220316163813441163.png" alt="B-Tree结构" title="B-Tree结构"></p><blockquote><p>B-Tree 的数据插入过程动画参照：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=68</a><br>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BTree.html">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a></p></blockquote><h4 id="B-Tree-1"><a href="#B-Tree-1" class="headerlink" title="B+Tree"></a>B+Tree</h4><p>结构图：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/B+Tree%E7%BB%93%E6%9E%84%E5%9B%BE_20220316170700591277.png" alt="B+Tree结构图" title="B+Tree结构图"></p><blockquote><p>演示地址：<a href="https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html">https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html</a></p></blockquote><p>与 B-Tree 的区别：</p><ul><li>所有的数据都会出现在叶子节点</li><li>叶子节点形成一个单向链表</li></ul><p>MySQL 索引数据结构对经典的 B+Tree 进行了优化。在原 B+Tree 的基础上，增加一个指向相邻叶子节点的链表指针，就形成了带有顺序指针的 B+Tree，提高区间访问的性能。</p><p><img src="https://dhc.pythonanywhere.com/media/editor/%E7%BB%93%E6%9E%84%E5%9B%BE_20220316171730865611.png" alt="MySQL B+Tree 结构图" title="MySQL B+Tree 结构图"></p><h4 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h4><p>哈希索引就是采用一定的hash算法，将键值换算成新的hash值，映射到对应的槽位上，然后存储在hash表中。<br>如果两个（或多个）键值，映射到一个相同的槽位上，他们就产生了hash冲突（也称为hash碰撞），可以通过链表来解决。</p><p><img src="https://dhc.pythonanywhere.com/media/editor/Hash%E7%B4%A2%E5%BC%95%E5%8E%9F%E7%90%86%E5%9B%BE_20220317143226150679.png" alt="Hash索引原理图" title="Hash索引原理图"></p><p>特点：</p><ul><li>Hash索引只能用于对等比较（&#x3D;、in），不支持范围查询（betwwn、&gt;、&lt;、…）</li><li>无法利用索引完成排序操作</li><li>查询效率高，通常只需要一次检索就可以了，效率通常要高于 B+Tree 索引</li></ul><p>存储引擎支持：</p><ul><li>Memory</li><li>InnoDB: 具有自适应hash功能，hash索引是存储引擎根据 B+Tree 索引在指定条件下自动构建的</li></ul><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h4><ol><li>为什么 InnoDB 存储引擎选择使用 B+Tree 索引结构？</li></ol><ul><li>相对于二叉树，层级更少，搜索效率高</li><li>对于 B-Tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针也跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低</li><li>相对于 Hash 索引，B+Tree 支持范围匹配及排序操作</li></ul><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><table><thead><tr><th>分类</th><th>含义</th><th>特点</th><th>关键字</th></tr></thead><tbody><tr><td>主键索引</td><td>针对于表中主键创建的索引</td><td>默认自动创建，只能有一个</td><td>PRIMARY</td></tr><tr><td>唯一索引</td><td>避免同一个表中某数据列中的值重复</td><td>可以有多个</td><td>UNIQUE</td></tr><tr><td>常规索引</td><td>快速定位特定数据</td><td>可以有多个</td><td></td></tr><tr><td>全文索引</td><td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td><td>可以有多个</td><td>FULLTEXT</td></tr></tbody></table><p>在 InnoDB 存储引擎中，根据索引的存储形式，又可以分为以下两种：</p><table><thead><tr><th>分类</th><th>含义</th><th>特点</th></tr></thead><tbody><tr><td>聚集索引(Clustered Index)</td><td>将数据存储与索引放一块，索引结构的叶子节点保存了行数据</td><td>必须有，而且只有一个</td></tr><tr><td>二级索引(Secondary Index)</td><td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td><td>可以存在多个</td></tr></tbody></table><p>演示图：</p><p><img src="https://dhc.pythonanywhere.com/media/editor/%E5%8E%9F%E7%90%86%E5%9B%BE_20220318194454880073.png" alt="大致原理" title="大致原理"><br><img src="https://dhc.pythonanywhere.com/media/editor/%E6%BC%94%E7%A4%BA%E5%9B%BE_20220319215403721066.png" alt="演示图" title="演示图"></p><p>聚集索引选取规则：</p><ul><li>如果存在主键，主键索引就是聚集索引</li><li>如果不存在主键，将使用第一个唯一(UNIQUE)索引作为聚集索引</li><li>如果表没有主键或没有合适的唯一索引，则 InnoDB 会自动生成一个 rowid 作为隐藏的聚集索引</li></ul><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><p>1. 以下 SQL 语句，哪个执行效率高？为什么？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select * from user where id = 10;</span><br><span class="line">select * from user where name = &#x27;Arm&#x27;;</span><br><span class="line">-- 备注：id为主键，name字段创建的有索引</span><br></pre></td></tr></table></figure><p>答：第一条语句，因为第二条需要回表查询，相当于两个步骤。</p><p>2. InnoDB 主键索引的 B+Tree 高度为多少？</p><p>答：假设一行数据大小为1k，一页中可以存储16行这样的数据。InnoDB 的指针占用6个字节的空间，主键假设为bigint，占用字节数为8.<br>可得公式：<code>n * 8 + (n + 1) * 6 = 16 * 1024</code>，其中 8 表示 bigint 占用的字节数，n 表示当前节点存储的key的数量，(n + 1) 表示指针数量（比key多一个）。算出n约为1170。</p><p>如果树的高度为2，那么他能存储的数据量大概为：<code>1171 * 16 = 18736</code>；<br>如果树的高度为3，那么他能存储的数据量大概为：<code>1171 * 1171 * 16 = 21939856</code>。</p><p>另外，如果有成千上万的数据，那么就要考虑分表，涉及运维篇知识。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>创建索引：<br><code>CREATE [ UNIQUE | FULLTEXT ] INDEX index_name ON table_name (index_col_name, ...);</code><br>如果不加 CREATE 后面不加索引类型参数，则创建的是常规索引</p><p>查看索引：<br><code>SHOW INDEX FROM table_name;</code></p><p>删除索引：<br><code>DROP INDEX index_name ON table_name;</code></p><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- name字段为姓名字段，该字段的值可能会重复，为该字段创建索引</span><br><span class="line">create index idx_user_name on tb_user(name);</span><br><span class="line">-- phone手机号字段的值非空，且唯一，为该字段创建唯一索引</span><br><span class="line">create unique index idx_user_phone on tb_user (phone);</span><br><span class="line">-- 为profession, age, status创建联合索引</span><br><span class="line">create index idx_user_pro_age_stat on tb_user(profession, age, status);</span><br><span class="line">-- 为email建立合适的索引来提升查询效率</span><br><span class="line">create index idx_user_email on tb_user(email);</span><br><span class="line"></span><br><span class="line">-- 删除索引</span><br><span class="line">drop index idx_user_email on tb_user;</span><br></pre></td></tr></table></figure><h3 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h3><h4 id="最左前缀法则"><a href="#最左前缀法则" class="headerlink" title="最左前缀法则"></a>最左前缀法则</h4><p>如果索引关联了多列（联合索引），要遵守最左前缀法则，最左前缀法则指的是查询从索引的最左列开始，并且不跳过索引中的列。<br>如果跳跃某一列，索引将部分失效（后面的字段索引失效）。</p><p>联合索引中，出现范围查询（&lt;, &gt;），范围查询右侧的列索引失效。可以用&gt;&#x3D;或者&lt;&#x3D;来规避索引失效问题。</p><h4 id="索引失效情况"><a href="#索引失效情况" class="headerlink" title="索引失效情况"></a>索引失效情况</h4><ol><li>在索引列上进行运算操作，索引将失效。如：<code>explain select * from tb_user where substring(phone, 10, 2) = &#39;15&#39;;</code></li><li>字符串类型字段使用时，不加引号，索引将失效。如：<code>explain select * from tb_user where phone = 17799990015;</code>，此处phone的值没有加引号</li><li>模糊查询中，如果仅仅是尾部模糊匹配，索引不会是失效；如果是头部模糊匹配，索引失效。如：<code>explain select * from tb_user where profession like &#39;%工程&#39;;</code>，前后都有 % 也会失效。</li><li>用 or 分割开的条件，如果 or 其中一个条件的列没有索引，那么涉及的索引都不会被用到。</li><li>如果 MySQL 评估使用索引比全表更慢，则不使用索引。</li></ol><h4 id="SQL-提示"><a href="#SQL-提示" class="headerlink" title="SQL 提示"></a>SQL 提示</h4><p>是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的。</p><p>例如，使用索引：<br><code>explain select * from tb_user use index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>不使用哪个索引：<br><code>explain select * from tb_user ignore index(idx_user_pro) where profession=&quot;软件工程&quot;;</code><br>必须使用哪个索引：<br><code>explain select * from tb_user force index(idx_user_pro) where profession=&quot;软件工程&quot;;</code></p><p>use 是建议，实际使用哪个索引 MySQL 还会自己权衡运行速度去更改，force就是无论如何都强制使用该索引。</p><h4 id="覆盖索引-amp-回表查询"><a href="#覆盖索引-amp-回表查询" class="headerlink" title="覆盖索引&amp;回表查询"></a>覆盖索引&amp;回表查询</h4><p>尽量使用覆盖索引（查询使用了索引，并且需要返回的列，在该索引中已经全部能找到），减少 select *。</p><p>explain 中 extra 字段含义：<br><code>using index condition</code>：查找使用了索引，但是需要回表查询数据<br><code>using where; using index;</code>：查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询</p><p>如果在聚集索引中直接能找到对应的行，则直接返回行数据，只需要一次查询，哪怕是select *；如果在辅助索引中找聚集索引，如<code>select id, name from xxx where name=&#39;xxx&#39;;</code>，也只需要通过辅助索引(name)查找到对应的id，返回name和name索引对应的id即可，只需要一次查询；如果是通过辅助索引查找其他字段，则需要回表查询，如<code>select id, name, gender from xxx where name=&#39;xxx&#39;;</code></p><p>所以尽量不要用<code>select *</code>，容易出现回表查询，降低效率，除非有联合索引包含了所有字段</p><p>面试题：一张表，有四个字段（id, username, password, status），由于数据量大，需要对以下SQL语句进行优化，该如何进行才是最优方案：<br><code>select id, username, password from tb_user where username=&#39;itcast&#39;;</code></p><p>解：给username和password字段建立联合索引，则不需要回表查询，直接覆盖索引</p><h4 id="前缀索引"><a href="#前缀索引" class="headerlink" title="前缀索引"></a>前缀索引</h4><p>当字段类型为字符串（varchar, text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO，影响查询效率，此时可以只降字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。</p><p>语法：<code>create index idx_xxxx on table_name(columnn(n));</code><br>前缀长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高，唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的。<br>求选择性公式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select count(distinct email) / count(*) from tb_user;</span><br><span class="line">select count(distinct substring(email, 1, 5)) / count(*) from tb_user;</span><br></pre></td></tr></table></figure><p>show index 里面的sub_part可以看到接取的长度</p><h4 id="单列索引-amp-联合索引"><a href="#单列索引-amp-联合索引" class="headerlink" title="单列索引&amp;联合索引"></a>单列索引&amp;联合索引</h4><p>单列索引：即一个索引只包含单个列<br>联合索引：即一个索引包含了多个列<br>在业务场景中，如果存在多个查询条件，考虑针对于查询字段建立索引时，建议建立联合索引，而非单列索引。</p><p>单列索引情况：<br><code>explain select id, phone, name from tb_user where phone = &#39;17799990010&#39; and name = &#39;韩信&#39;;</code><br>这句只会用到phone索引字段</p><h5 id="注意事项-8"><a href="#注意事项-8" class="headerlink" title="注意事项"></a>注意事项</h5><ul><li>多条件联合查询时，MySQL优化器会评估哪个字段的索引效率更高，会选择该索引完成本次查询</li></ul><h3 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h3><ol><li>针对于数据量较大，且查询比较频繁的表建立索引</li><li>针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引</li><li>尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高</li><li>如果是字符串类型的字段，字段长度较长，可以针对于字段的特点，建立前缀索引</li><li>尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率</li><li>要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价就越大，会影响增删改的效率</li><li>如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询</li></ol><h2 id="SQL-优化"><a href="#SQL-优化" class="headerlink" title="SQL 优化"></a>SQL 优化</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p>普通插入：</p><ol><li>采用批量插入（一次插入的数据不建议超过1000条）</li><li>手动提交事务</li><li>主键顺序插入</li></ol><p>大批量插入：<br>如果一次性需要插入大批量数据，使用insert语句插入性能较低，此时可以使用MySQL数据库提供的load指令插入。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 客户端连接服务端时，加上参数 --local-infile（这一行在bash/cmd界面输入）</span><br><span class="line">mysql --local-infile -u root -p</span><br><span class="line"># 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关</span><br><span class="line">set global local_infile = 1;</span><br><span class="line">select @@local_infile;</span><br><span class="line"># 执行load指令将准备好的数据，加载到表结构中</span><br><span class="line">load data local infile &#x27;/root/sql1.log&#x27; into table &#x27;tb_user&#x27; fields terminated by &#x27;,&#x27; lines terminated by &#x27;\n&#x27;;</span><br></pre></td></tr></table></figure><h3 id="主键优化"><a href="#主键优化" class="headerlink" title="主键优化"></a>主键优化</h3><p>数据组织方式：在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表（Index organized table, IOT）</p><p>页分裂：页可以为空，也可以填充一般，也可以填充100%，每个页包含了2-N行数据（如果一行数据过大，会行溢出），根据主键排列。<br>页合并：当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。当页中删除的记录到达 MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前后）看看是否可以将这两个页合并以优化空间使用。</p><p>MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或创建索引时指定</p><blockquote><p>文字说明不够清晰明了，具体可以看视频里的PPT演示过程：<a href="https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90">https://www.bilibili.com/video/BV1Kr4y1i7ru?p=90</a></p></blockquote><p>主键设计原则：</p><ul><li>满足业务需求的情况下，尽量降低主键的长度</li><li>插入数据时，尽量选择顺序插入，选择使用 AUTO_INCREMENT 自增主键</li><li>尽量不要使用 UUID 做主键或者是其他的自然主键，如身份证号</li><li>业务操作时，避免对主键的修改</li></ul><h3 id="order-by优化"><a href="#order-by优化" class="headerlink" title="order by优化"></a>order by优化</h3><ol><li>Using filesort：通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区 sort buffer 中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序</li><li>Using index：通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高</li></ol><p>如果order by字段全部使用升序排序或者降序排序，则都会走索引，但是如果一个字段升序排序，另一个字段降序排序，则不会走索引，explain的extra信息显示的是<code>Using index, Using filesort</code>，如果要优化掉Using filesort，则需要另外再创建一个索引，如：<code>create index idx_user_age_phone_ad on tb_user(age asc, phone desc);</code>，此时使用<code>select id, age, phone from tb_user order by age asc, phone desc;</code>会全部走索引</p><p>总结：</p><ul><li>根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则</li><li>尽量使用覆盖索引</li><li>多字段排序，一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC&#x2F;DESC）</li><li>如果不可避免出现filesort，大数据量排序时，可以适当增大排序缓冲区大小 sort_buffer_size（默认256k）</li></ul><h3 id="group-by优化"><a href="#group-by优化" class="headerlink" title="group by优化"></a>group by优化</h3><ul><li>在分组操作时，可以通过索引来提高效率</li><li>分组操作时，索引的使用也是满足最左前缀法则的</li></ul><p>如索引为<code>idx_user_pro_age_stat</code>，则句式可以是<code>select ... where profession order by age</code>，这样也符合最左前缀法则</p><h3 id="limit优化"><a href="#limit优化" class="headerlink" title="limit优化"></a>limit优化</h3><p>常见的问题如<code>limit 2000000, 10</code>，此时需要 MySQL 排序前2000000条记录，但仅仅返回2000000 - 2000010的记录，其他记录丢弃，查询排序的代价非常大。<br>优化方案：一般分页查询时，通过创建覆盖索引能够比较好地提高性能，可以通过覆盖索引加子查询形式进行优化</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 此语句耗时很长</span><br><span class="line">select * from tb_sku limit 9000000, 10;</span><br><span class="line">-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询</span><br><span class="line">select id from tb_sku order by id limit 9000000, 10;</span><br><span class="line">-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit</span><br><span class="line">-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);</span><br><span class="line">-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度</span><br><span class="line">select * from tb_sku as s, (select id from tb_sku order by id limit 9000000, 10) as a where s.id = a.id;</span><br></pre></td></tr></table></figure><h3 id="count优化"><a href="#count优化" class="headerlink" title="count优化"></a>count优化</h3><p>MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个数，效率很高（前提是不适用where）；<br>InnoDB 在执行 count(*) 时，需要把数据一行一行地从引擎里面读出来，然后累计计数。<br>优化方案：自己计数，如创建key-value表存储在内存或硬盘，或者是用redis</p><p>count的几种用法：</p><ul><li>如果count函数的参数（count里面写的那个字段）不是NULL（字段值不为NULL），累计值就加一，最后返回累计值</li><li>用法：count(*)、count(主键)、count(字段)、count(1)</li><li>count(主键)跟count(*)一样，因为主键不能为空；count(字段)只计算字段值不为NULL的行；count(1)引擎会为每行添加一个1，然后就count这个1，返回结果也跟count(*)一样；count(null)返回0</li></ul><p>各种用法的性能：</p><ul><li>count(主键)：InnoDB引擎会遍历整张表，把每行的主键id值都取出来，返回给服务层，服务层拿到主键后，直接按行进行累加（主键不可能为空）</li><li>count(字段)：没有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，服务层判断是否为null，不为null，计数累加；有not null约束的话，InnoDB引擎会遍历整张表把每一行的字段值都取出来，返回给服务层，直接按行进行累加</li><li>count(1)：InnoDB 引擎遍历整张表，但不取值。服务层对于返回的每一层，放一个数字 1 进去，直接按行进行累加</li><li>count(*)：InnoDB 引擎并不会把全部字段取出来，而是专门做了优化，不取值，服务层直接按行进行累加</li></ul><p>按效率排序：count(字段) &lt; count(主键) &lt; count(1) &lt; count(*)，所以尽量使用 count(*)</p><h3 id="update优化（避免行锁升级为表锁）"><a href="#update优化（避免行锁升级为表锁）" class="headerlink" title="update优化（避免行锁升级为表锁）"></a>update优化（避免行锁升级为表锁）</h3><p>InnoDB 的行锁是针对索引加的锁，不是针对记录加的锁，并且该索引不能失效，否则会从行锁升级为表锁。</p><p>如以下两条语句：<br><code>update student set no = &#39;123&#39; where id = 1;</code>，这句由于id有主键索引，所以只会锁这一行；<br><code>update student set no = &#39;123&#39; where name = &#39;test&#39;;</code>，这句由于name没有索引，所以会把整张表都锁住进行数据更新，解决方法是给name字段添加索引</p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h2><table><thead><tr><th>类型名称</th><th>取值范围</th><th>大小</th></tr></thead><tbody><tr><td>TINYINT</td><td>-128〜127</td><td>1个字节</td></tr><tr><td>SMALLINT</td><td>-32768〜32767</td><td>2个宇节</td></tr><tr><td>MEDIUMINT</td><td>-8388608〜8388607</td><td>3个字节</td></tr><tr><td>INT (INTEGHR)</td><td>-2147483648〜2147483647</td><td>4个字节</td></tr><tr><td>BIGINT</td><td>-9223372036854775808〜9223372036854775807</td><td>8个字节</td></tr></tbody></table><p>无符号在数据类型后加 unsigned 关键字。</p><h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>FLOAT</td><td>单精度浮点数</td><td>4 个字节</td></tr><tr><td>DOUBLE</td><td>双精度浮点数</td><td>8 个字节</td></tr><tr><td>DECIMAL (M, D)，DEC</td><td>压缩的“严格”定点数</td><td>M+2 个字节</td></tr></tbody></table><h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><table><thead><tr><th>类型名称</th><th>日期格式</th><th>日期范围</th><th>存储需求</th></tr></thead><tbody><tr><td>YEAR</td><td>YYYY</td><td>1901 ~ 2155</td><td>1 个字节</td></tr><tr><td>TIME</td><td>HH:MM:SS</td><td>-838:59:59 ~ 838:59:59</td><td>3 个字节</td></tr><tr><td>DATE</td><td>YYYY-MM-DD</td><td>1000-01-01 ~ 9999-12-3</td><td>3 个字节</td></tr><tr><td>DATETIME</td><td>YYYY-MM-DD HH:MM:SS</td><td>1000-01-01 00:00:00 ~ 9999-12-31 23:59:59</td><td>8 个字节</td></tr><tr><td>TIMESTAMP</td><td>YYYY-MM-DD HH:MM:SS</td><td>1980-01-01 00:00:01 UTC ~ 2040-01-19 03:14:07 UTC</td><td>4 个字节</td></tr></tbody></table><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>CHAR(M)</td><td>固定长度非二进制字符串</td><td>M 字节，1&lt;&#x3D;M&lt;&#x3D;255</td></tr><tr><td>VARCHAR(M)</td><td>变长非二进制字符串</td><td>L+1字节，在此，L&lt; &#x3D; M和 1&lt;&#x3D;M&lt;&#x3D;255</td></tr><tr><td>TINYTEXT</td><td>非常小的非二进制字符串</td><td>L+1字节，在此，L&lt;2^8</td></tr><tr><td>TEXT</td><td>小的非二进制字符串</td><td>L+2字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMTEXT</td><td>中等大小的非二进制字符串</td><td>L+3字节，在此，L&lt;2^24</td></tr><tr><td>LONGTEXT</td><td>大的非二进制字符串</td><td>L+4字节，在此，L&lt;2^32</td></tr><tr><td>ENUM</td><td>枚举类型，只能有一个枚举字符串值</td><td>1或2个字节，取决于枚举值的数目 (最大值为65535)</td></tr><tr><td>SET</td><td>一个设置，字符串对象可以有零个或 多个SET成员</td><td>1、2、3、4或8个字节，取决于集合 成员的数量（最多64个成员）</td></tr></tbody></table><h2 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h2><table><thead><tr><th>类型名称</th><th>说明</th><th>存储需求</th></tr></thead><tbody><tr><td>BIT(M)</td><td>位字段类型</td><td>大约 (M+7)&#x2F;8 字节</td></tr><tr><td>BINARY(M)</td><td>固定长度二进制字符串</td><td>M 字节</td></tr><tr><td>VARBINARY (M)</td><td>可变长度二进制字符串</td><td>M+1 字节</td></tr><tr><td>TINYBLOB (M)</td><td>非常小的BLOB</td><td>L+1 字节，在此，L&lt;2^8</td></tr><tr><td>BLOB (M)</td><td>小 BLOB</td><td>L+2 字节，在此，L&lt;2^16</td></tr><tr><td>MEDIUMBLOB (M)</td><td>中等大小的BLOB</td><td>L+3 字节，在此，L&lt;2^24</td></tr><tr><td>LONGBLOB (M)</td><td>非常大的BLOB</td><td>L+4 字节，在此，L&lt;2^32</td></tr></tbody></table><h1 id="权限一览表"><a href="#权限一览表" class="headerlink" title="权限一览表"></a>权限一览表</h1><blockquote><p>具体权限的作用详见<a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html" title="官方文档">官方文档</a></p></blockquote><p>GRANT 和 REVOKE 允许的静态权限</p><table><thead><tr><th align="left">Privilege</th><th align="left">Grant Table Column</th><th align="left">Context</th></tr></thead><tbody><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_all"><code>ALL [PRIVILEGES]</code></a></td><td align="left">Synonym for “all privileges”</td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter"><code>ALTER</code></a></td><td align="left"><code>Alter_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_alter-routine"><code>ALTER ROUTINE</code></a></td><td align="left"><code>Alter_routine_priv</code></td><td align="left">Stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create"><code>CREATE</code></a></td><td align="left"><code>Create_priv</code></td><td align="left">Databases, tables, or indexes</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-role"><code>CREATE ROLE</code></a></td><td align="left"><code>Create_role_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-routine"><code>CREATE ROUTINE</code></a></td><td align="left"><code>Create_routine_priv</code></td><td align="left">Stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-tablespace"><code>CREATE TABLESPACE</code></a></td><td align="left"><code>Create_tablespace_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-temporary-tables"><code>CREATE TEMPORARY TABLES</code></a></td><td align="left"><code>Create_tmp_table_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-user"><code>CREATE USER</code></a></td><td align="left"><code>Create_user_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_create-view"><code>CREATE VIEW</code></a></td><td align="left"><code>Create_view_priv</code></td><td align="left">Views</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_delete"><code>DELETE</code></a></td><td align="left"><code>Delete_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop"><code>DROP</code></a></td><td align="left"><code>Drop_priv</code></td><td align="left">Databases, tables, or views</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_drop-role"><code>DROP ROLE</code></a></td><td align="left"><code>Drop_role_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_event"><code>EVENT</code></a></td><td align="left"><code>Event_priv</code></td><td align="left">Databases</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_execute"><code>EXECUTE</code></a></td><td align="left"><code>Execute_priv</code></td><td align="left">Stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_file"><code>FILE</code></a></td><td align="left"><code>File_priv</code></td><td align="left">File access on server host</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_grant-option"><code>GRANT OPTION</code></a></td><td align="left"><code>Grant_priv</code></td><td align="left">Databases, tables, or stored routines</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_index"><code>INDEX</code></a></td><td align="left"><code>Index_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_insert"><code>INSERT</code></a></td><td align="left"><code>Insert_priv</code></td><td align="left">Tables or columns</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_lock-tables"><code>LOCK TABLES</code></a></td><td align="left"><code>Lock_tables_priv</code></td><td align="left">Databases</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_process"><code>PROCESS</code></a></td><td align="left"><code>Process_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_proxy"><code>PROXY</code></a></td><td align="left">See <code>proxies_priv</code> table</td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_references"><code>REFERENCES</code></a></td><td align="left"><code>References_priv</code></td><td align="left">Databases or tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_reload"><code>RELOAD</code></a></td><td align="left"><code>Reload_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-client"><code>REPLICATION CLIENT</code></a></td><td align="left"><code>Repl_client_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave"><code>REPLICATION SLAVE</code></a></td><td align="left"><code>Repl_slave_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_select"><code>SELECT</code></a></td><td align="left"><code>Select_priv</code></td><td align="left">Tables or columns</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-databases"><code>SHOW DATABASES</code></a></td><td align="left"><code>Show_db_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-view"><code>SHOW VIEW</code></a></td><td align="left"><code>Show_view_priv</code></td><td align="left">Views</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_shutdown"><code>SHUTDOWN</code></a></td><td align="left"><code>Shutdown_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_super"><code>SUPER</code></a></td><td align="left"><code>Super_priv</code></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_trigger"><code>TRIGGER</code></a></td><td align="left"><code>Trigger_priv</code></td><td align="left">Tables</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_update"><code>UPDATE</code></a></td><td align="left"><code>Update_priv</code></td><td align="left">Tables or columns</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_usage"><code>USAGE</code></a></td><td align="left">Synonym for “no privileges”</td><td align="left">Server administration</td></tr></tbody></table><p>GRANT 和 REVOKE 允许的动态权限</p><table><thead><tr><th align="left">Privilege</th><th align="left">Context</th></tr></thead><tbody><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_application-password-admin"><code>APPLICATION_PASSWORD_ADMIN</code></a></td><td align="left">Dual password administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-abort-exempt"><code>AUDIT_ABORT_EXEMPT</code></a></td><td align="left">Allow queries blocked by audit log filter</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_audit-admin"><code>AUDIT_ADMIN</code></a></td><td align="left">Audit log administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_authentication-policy-admin"><code>AUTHENTICATION_POLICY_ADMIN</code></a></td><td align="left">Authentication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_backup-admin"><code>BACKUP_ADMIN</code></a></td><td align="left">Backup administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-admin"><code>BINLOG_ADMIN</code></a></td><td align="left">Backup and Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_binlog-encryption-admin"><code>BINLOG_ENCRYPTION_ADMIN</code></a></td><td align="left">Backup and Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_clone-admin"><code>CLONE_ADMIN</code></a></td><td align="left">Clone administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_connection-admin"><code>CONNECTION_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_encryption-key-admin"><code>ENCRYPTION_KEY_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-admin"><code>FIREWALL_ADMIN</code></a></td><td align="left">Firewall administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-exempt"><code>FIREWALL_EXEMPT</code></a></td><td align="left">Firewall administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_firewall-user"><code>FIREWALL_USER</code></a></td><td align="left">Firewall administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-optimizer-costs"><code>FLUSH_OPTIMIZER_COSTS</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-status"><code>FLUSH_STATUS</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-tables"><code>FLUSH_TABLES</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_flush-user-resources"><code>FLUSH_USER_RESOURCES</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-admin"><code>GROUP_REPLICATION_ADMIN</code></a></td><td align="left">Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_group-replication-stream"><code>GROUP_REPLICATION_STREAM</code></a></td><td align="left">Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_innodb-redo-log-archive"><code>INNODB_REDO_LOG_ARCHIVE</code></a></td><td align="left">Redo log archiving administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_ndb-stored-user"><code>NDB_STORED_USER</code></a></td><td align="left">NDB Cluster</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_passwordless-user-admin"><code>PASSWORDLESS_USER_ADMIN</code></a></td><td align="left">Authentication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_persist-ro-variables-admin"><code>PERSIST_RO_VARIABLES_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-applier"><code>REPLICATION_APPLIER</code></a></td><td align="left"><code>PRIVILEGE_CHECKS_USER</code> for a replication channel</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_replication-slave-admin"><code>REPLICATION_SLAVE_ADMIN</code></a></td><td align="left">Replication administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-admin"><code>RESOURCE_GROUP_ADMIN</code></a></td><td align="left">Resource group administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_resource-group-user"><code>RESOURCE_GROUP_USER</code></a></td><td align="left">Resource group administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_role-admin"><code>ROLE_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_session-variables-admin"><code>SESSION_VARIABLES_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_set-user-id"><code>SET_USER_ID</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_show-routine"><code>SHOW_ROUTINE</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-user"><code>SYSTEM_USER</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_system-variables-admin"><code>SYSTEM_VARIABLES_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_table-encryption-admin"><code>TABLE_ENCRYPTION_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_version-token-admin"><code>VERSION_TOKEN_ADMIN</code></a></td><td align="left">Server administration</td></tr><tr><td align="left"><a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html#priv_xa-recover-admin"><code>XA_RECOVER_ADMIN</code></a></td><td align="left">Server administration</td></tr></tbody></table><h1 id="图形化界面工具"><a href="#图形化界面工具" class="headerlink" title="图形化界面工具"></a>图形化界面工具</h1><ul><li>Workbench(免费): <a href="http://dev.mysql.com/downloads/workbench/">http://dev.mysql.com/downloads/workbench/</a></li><li>navicat(收费，试用版30天): <a href="https://www.navicat.com/en/download/navicat-for-mysql">https://www.navicat.com/en/download/navicat-for-mysql</a></li><li>Sequel Pro(开源免费，仅支持Mac OS): <a href="http://www.sequelpro.com/">http://www.sequelpro.com/</a></li><li>HeidiSQL(免费): <a href="http://www.heidisql.com/">http://www.heidisql.com/</a></li><li>phpMyAdmin(免费): <a href="https://www.phpmyadmin.net/">https://www.phpmyadmin.net/</a></li><li>SQLyog: <a href="https://sqlyog.en.softonic.com/">https://sqlyog.en.softonic.com/</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><ol><li>在SQL语句之后加上<code>\G</code>会将结果的表格形式转换成行文本形式</li><li>查看Mysql数据库占用空间：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema &quot;Database Name&quot;</span><br><span class="line">     , SUM(data_length + index_length) / (1024 * 1024) &quot;Database Size in MB&quot;</span><br><span class="line">FROM information_schema.TABLES</span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure></li></ol>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <category domain="http://example.com/tags/Mysql/">Mysql</category>
      
      
      <comments>http://example.com/2022/mysql/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>巫师3：狂猎</title>
      <link>http://example.com/2022/thewitcher3/</link>
      <guid>http://example.com/2022/thewitcher3/</guid>
      <pubDate>Mon, 31 Oct 2022 16:00:00 GMT</pubDate>
      
      <description>&lt;hr&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;命运之剑有两把剑锋&lt;br&gt;其中一道是你&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;
&lt;img src=&quot;https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/Qidian.jpg&quot; style=&quot;zoom:50%;&quot; /&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><blockquote class="blockquote-center"><p>命运之剑有两把剑锋<br>其中一道是你</p></blockquote><hr><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/Qidian.jpg" style="zoom:50%;" /><span id="more"></span><p>《巫师3：狂猎》是由CD Projekt RED制作，游戏改编自小说《猎魔人》系列，为《<a href="https://baike.baidu.com/item/%E5%B7%AB%E5%B8%88/3816318?fromModule=lemma_inlink">巫师</a>》系列的第三部作品，同时也是杰洛特冒险的终曲。该作承接《<a href="https://baike.baidu.com/item/%E5%B7%AB%E5%B8%882%EF%BC%9A%E5%9B%BD%E7%8E%8B%E5%88%BA%E5%AE%A2/10427943?fromModule=lemma_inlink">巫师2：国王刺客</a>》的剧情，那些想要利用杰洛特的人已经不在了。杰洛特寻求改变自己的生活，着手于新的个人使命，而世界的秩序也在悄然改变。</p><p>游戏延承了《<a href="https://baike.baidu.com/item/%E7%8C%8E%E9%AD%94%E4%BA%BA/7252589?fromModule=lemma_inlink">猎魔人</a>》系列小说的世界观。在小说故事发生前1500年前发生的一场灾难，不同的维度之间的世界发生了碰撞，世界直接被连接并互相渗透。这场灾难被称为“天球交汇”，它让很多来自各式各样来自不同世界中的生物被困在这个世界中，例如，食尸鬼和血棘尸魔和高阶吸血鬼，它们就是天球交汇所留下的残物。这些生物带有自己独特的生态，是过去时代的遗种。根据精灵的传说，人类因为自己之前的世界被毁灭，来到了这个世界。</p><p>人类的祖先学会了如何驾驭混沌之力，最早的人类法师从此诞生，并对抗着其他来自不同世界的生物。但由于怪物四处散布且难以击败，在普通人不具备与怪物对抗的情况下，猎魔人由此孕育而生，他们是专门被普通人雇佣来猎杀怪物的变种人类，并以此维持生计，保护人们不受怪物威胁。</p><p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/QQ%E5%9B%BE%E7%89%8720230116204559.png"></p><p>游戏主人公，利维亚的杰洛特是一名猎魔人，在上古语中，他被称为“格温布雷德”，意为“白狼”。他身手敏捷，但同时又深不可测。在他冷漠寡言的外表下，隐藏着如海洋一般辽阔的善良和幽默感。像所有猎魔人一样，杰洛特是职业怪物猎手。他拥有超乎常人的力量和速度，杰洛特在猎魔人的青草试炼中展示出不寻常的忍受能力并存活了下来，从而获得了这些能力。</p><p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/XiLi.png"></p><p>希里全名希里雅·欧菲娜·伊伦·雷安伦，她是一位技艺精湛的猎魔人，好几个皇位的继承人，上古之血的最后传承者，无与伦比的魔法之源。她是杰洛特通过意外律获得的养女，同时也是他的天命，他的意外之女，他们两人被命运的枷锁紧紧羁绊在一起。</p><p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/YeNai.png"></p><p>叶奈法是一位来自亚甸首都温格堡的女术士，她是术士评议会以及其后的女术士集会所成员。她是杰洛特的挚爱，也担当了希瑞养母的角色。叶奈法与杰洛特的感情始于一场关于迪精的冒险，随着这场冒险，他们二人的命运纠缠在了一起。他们的感情经历了许多风暴，他们仍然互相吸引彼此。</p><p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/End.png"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=33735522&auto=1&height=66"></iframe>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/Game/">Game</category>
      
      
      <category domain="http://example.com/tags/Game/">Game</category>
      
      <category domain="http://example.com/tags/TheWitcher3/">TheWitcher3</category>
      
      
      <comments>http://example.com/2022/thewitcher3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>王小波</title>
      <link>http://example.com/2022/wxiaobo/</link>
      <guid>http://example.com/2022/wxiaobo/</guid>
      <pubDate>Tue, 11 Jan 2022 16:00:00 GMT</pubDate>
      
      <description>&lt;hr&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;  这本书原来是我的，这世界上原来还有属于我的东西——说起来平淡无奇，但我确实没想到。&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;


&lt;p&gt;王小波&lt;em&gt;（1952年5月13日—1997年4月11日）&lt;/em&gt;，男，中国当代学者、作家。代表作品有《&lt;a href=&quot;https://baike.baidu.com/item/%E9%BB%84%E9%87%91%E6%97%B6%E4%BB%A3/13130552?fromModule=lemma_inlink&quot;&gt;黄金时代&lt;/a&gt;》《&lt;a href=&quot;https://baike.baidu.com/item/%E7%99%BD%E9%93%B6%E6%97%B6%E4%BB%A3/25278?fromModule=lemma_inlink&quot;&gt;白银时代&lt;/a&gt;》《&lt;a href=&quot;https://baike.baidu.com/item/%E9%9D%92%E9%93%9C%E6%97%B6%E4%BB%A3/9023087?fromModule=lemma_inlink&quot;&gt;青铜时代&lt;/a&gt;》《&lt;a href=&quot;https://baike.baidu.com/item/%E9%BB%91%E9%93%81%E6%97%B6%E4%BB%A3/1645748?fromModule=lemma_inlink&quot;&gt;黑铁时代&lt;/a&gt;》等。 &lt;/p&gt;
&lt;img src=&quot;https://fmphoto.oss-cn-chengdu.aliyuncs.com/Video/%E7%8E%8B%E5%B0%8F%E6%B3%A2.jpeg&quot;  style=&quot;zoom: 66%;&quot; /&gt;

&lt;center&gt;&lt;font align=&quot;center&quot; color=gray size=2&gt;王小波与李银河&lt;/font&gt;&lt;/center&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><blockquote class="blockquote-center"><p>  这本书原来是我的，这世界上原来还有属于我的东西——说起来平淡无奇，但我确实没想到。</p></blockquote><hr><p>王小波<em>（1952年5月13日—1997年4月11日）</em>，男，中国当代学者、作家。代表作品有《<a href="https://baike.baidu.com/item/%E9%BB%84%E9%87%91%E6%97%B6%E4%BB%A3/13130552?fromModule=lemma_inlink">黄金时代</a>》《<a href="https://baike.baidu.com/item/%E7%99%BD%E9%93%B6%E6%97%B6%E4%BB%A3/25278?fromModule=lemma_inlink">白银时代</a>》《<a href="https://baike.baidu.com/item/%E9%9D%92%E9%93%9C%E6%97%B6%E4%BB%A3/9023087?fromModule=lemma_inlink">青铜时代</a>》《<a href="https://baike.baidu.com/item/%E9%BB%91%E9%93%81%E6%97%B6%E4%BB%A3/1645748?fromModule=lemma_inlink">黑铁时代</a>》等。 </p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Video/%E7%8E%8B%E5%B0%8F%E6%B3%A2.jpeg"  style="zoom: 66%;" /><center><font align="center" color=gray size=2>王小波与李银河</font></center><span id="more"></span><p>生于北京，先后当过知青、民办教师、工人。1978年考入中国人民大学，1980年王小波与<a href="https://baike.baidu.com/item/%E6%9D%8E%E9%93%B6%E6%B2%B3/648256?fromModule=lemma_inlink">李银河</a>结婚，同年发表处女作《地久天长》。1984年赴美匹兹堡大学东亚研究中心求学，2年后获得硕士学位。在美留学期间，游历了美国各地，并利用1986年暑假游历了西欧诸国。1988年回国，先后在北京大学，中国人民大学任教。1992年9月辞去教职，做自由撰稿人。他的唯一一部电影剧本《<a href="https://baike.baidu.com/item/%E4%B8%9C%E5%AE%AB%E8%A5%BF%E5%AE%AB/2540476?fromModule=lemma_inlink">东宫西宫</a>》获阿根廷国际电影节<strong>最佳编剧奖</strong>，使王小波成为在国际电影节为中国取得最佳编剧奖的第一人，并且入围1997年戛纳国际电影节。1997年4月11日病逝于北京，年仅45岁。</p><div class="douban-card-block">    <a class="douban-card" href="https://movie.douban.com/subject/1304609">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/photo/s_ratio_poster/public/p944507896.jpg');"></div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img9.doubanio.com/view/photo/s_ratio_poster/public/p944507896.jpg');"></div>            <div class="douban-card-status">灯影绰约</div>        </div>        <div class="douban-card-right">            <div class="douban-card-item"><span>电影名: </span><strong>东宫西宫東宮西宮(1996)</strong></div>            <div class="douban-card-item"><span>导演: </span><span>张元</span></div>            <div class="douban-card-item"><span>主演: </span><span>司汗/胡军</span></div>            <div class="douban-card-item"><span>上映时间: </span><span>1996-11(马德普拉塔电影节)</span></div>            <div class="douban-card-item"><span>评分: </span><span>6.8</span></div>        </div>    </a></div><p>1977年，二十五岁的王小波与在《光明日报》做编辑的李银河相识并恋爱。当时在王小波朋友圈中传阅的小说手稿《绿毛水怪》是二人相识的契机。相识以后，他们开始了书信往来。</p><div class="douban-card-block">    <a class="douban-card" href="https://book.douban.com/subject/30163860">        <div bg-lazy class="douban-card-bgimg" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29774838.jpg');">        </div>        <div class="douban-card-left">            <div bg-lazy class="douban-card-img" style="background-image: url('https://images.weserv.nl/?url=https://img1.doubanio.com/view/subject/s/public/s29774838.jpg');">            </div>            <div class="douban-card-status">见字如晤</div>        </div>        <div class="douban-card-right" style="line-height: 1.7;">            <div class="douban-card-item"><span>书名: </span><strong>绿毛水怪</strong></div>            <div class="douban-card-item"><span>作者: </span><span>王小波</span></div>            <div class="douban-card-item"><span>出版年份: </span><span>2018-6</span></div>            <div class="douban-card-item"><span>评分: </span><span>9.1</span></div>        </div>    </a></div><p>1980年1月21日，王小波和李银河登记结婚，因为那时王小波28岁，正在大学读二年级，学生有规定不准结婚，所以结婚是秘密的。没拍结婚照，也没婚礼，两家各请了一桌，不注重形式。王小波和李银河没有孩子，他们结婚前就商量好，两人的世界就已经很丰富很有趣了，不像有些夫妻需要孩子作为纽带。</p><h4 id="代表作品"><a href="#代表作品" class="headerlink" title="代表作品"></a>代表作品</h4><p>1980年9月　《唐人秘传故事》　山东文艺出版社。</p><p>1992年3月　《王二风流史》　香港繁荣出版社。</p><p>1992年8月　《黄金时代》　台湾联经出版社。</p><p>1992年1月　《他们的世界——中国男同性恋群落透视》与李银河合著。香港天地图书公司。</p><p>1994年7月　《黄金时代》　华夏出版社。</p><p>1995年7月　《未来世界》　台湾联经出版社。</p><p>1996年11月　《思维的乐趣》　北岳文艺出版社。</p><p>1997年5月　《时代三部曲》包括《黄金时代》、《白银时代》、《青铜时代》三部小说集　花城出版社。出版于他逝世之后，当年曾引起轰动。</p><p>1997年5月　《我的精神家园》　文化艺术出版社。</p><p>1997年10月　《沉默的大多数》　中国青年出版社。</p><p>1998年2月　《黑铁时代》　时代文艺出版社。</p><p>1998年2月　《地久天长》　时代文艺出版社。</p><p>1999年2月，《黄金时代》（上、下）、《白银时代》、《青铜时代》（上、中、下）由台湾风云时代出版公司出版；4月，《王小波文存》由中国青年出版社出版。</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/">笔记</category>
      
      <category domain="http://example.com/categories/%E7%AC%94%E8%AE%B0/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/">读书笔记</category>
      
      
      <category domain="http://example.com/tags/%E7%8E%8B%E5%B0%8F%E6%B3%A2/">王小波</category>
      
      <category domain="http://example.com/tags/%E9%98%85%E8%AF%BB%E6%B8%85%E5%8D%95/">阅读清单</category>
      
      
      <comments>http://example.com/2022/wxiaobo/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>戦場ヶ原</title>
      <link>http://example.com/2022/hello-world/</link>
      <guid>http://example.com/2022/hello-world/</guid>
      <pubDate>Fri, 31 Dec 2021 16:00:00 GMT</pubDate>
      
      <description>&lt;hr&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;莫非，未经世故的阿良良木同学，&lt;br&gt;对我可爱的私服模样心神荡漾，幸福地看晕了？&lt;/p&gt;&lt;p&gt;戦場ヶ原 ひたぎ&lt;/p&gt;&lt;/blockquote&gt;&lt;hr&gt;
&lt;img src=&quot;https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/Hallo.jpg&quot; style=&quot;zoom: 50%;&quot; /&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><hr><blockquote class="blockquote-center"><p>莫非，未经世故的阿良良木同学，<br>对我可爱的私服模样心神荡漾，幸福地看晕了？</p><p>戦場ヶ原 ひたぎ</p></blockquote><hr><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/Hallo.jpg" style="zoom: 50%;" /><span id="more"></span><p>傲娇<strong>毒舌</strong>父控，男主人公阿良良木历的<strong>女朋友</strong>.公认的“傲娇”角色,阿良良木历认为她是“冷傲”,非常毒舌，自称其”暴言”是用“铜四十公克、锌二十五克、镍十五公克、腼腆五公克，再加上九十七公斤的恶意”提炼出来的。经常对历使用毒舌谩骂的“言语暴力”，但这好像恰恰是她的示爱表现。历认为她是“诱受型的角色”，即故意说一些话，引诱对方做出自己期待反应的角色。<br>最强武器是<del>暴言</del>订书机，曾用其订伤垃圾君。<br>自我意识强烈的高中女生，强烈的警戒心以及高度的防卫意识与过度的攻击意识，而且是遇到挑衅会先发制人直接还击的类型。战场原的喜怒哀乐不形于色，声音也同样不带任何感情。她不管说什么，语调几乎都是四平八稳。</p>    <div id="aplayer-bdBjjXOb" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="460638" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555" data-volume="0.4"    ></div><h4 id="重生"><a href="#重生" class="headerlink" title="重生"></a>重生</h4><p>《伪物语》中，战场原借由和贝木泥舟的对决，同自己的往事诀别，消除了自己身上所有的怪异因素。经过非常彻底的重生，不再偏激，不走极端，不会莫名具有攻击性，会对正常的事情做出正常的反应，完完全全成了一个温柔可爱的平凡女高中生、容易害羞的女孩子。不仅表情丰富，还带着幽默感，而且最重要的是，她变得经常会展露笑容了。但是她那“毒舌时代”的残渣还是会时不时渗透出来。 </p><p>为了跟自己的过去做一个了断，战场原还将从小学期就保持着的长长的黑色（动画中表现为紫色）直发剪成了一头清爽<strong>短发</strong>，曾经一直线的刘海也变成了蓬松的波浪形。如果说把双脚裸露出来，那宁可砍掉也是过去的事情了，裙子的下摆变短了<del>绝对领域</del>，对于肌肤裸露也不再那么抗拒。原先在她身上的那种“大家闺秀”的氛围也消失得无影无踪。</p><h4 id="在5月14日母亲节那天向历告白："><a href="#在5月14日母亲节那天向历告白：" class="headerlink" title="在5月14日母亲节那天向历告白："></a><strong>在5月14日母亲节那天向历告白</strong>：</h4><p><video src='https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/Love.mp4'     controls='controls'  preload="auto"  width='70%'  height='70%' preload='preload' ></video></p><p>战场原不是那种会把恩情和爱情混为一谈的人，喜欢历不是因为历帮助了自己，而因为历“对谁都很温柔”的性格。深爱着历，甚至“<strong>深爱到即使你全身沾满秽物，我也会毫不犹豫拥抱你</strong>”的程度。曾宣称“要是阿良良木被我以外的人杀死，我会去杀掉那个犯人”的程度。“翼猫”章中，在和历的第一次约会中与历接吻，为此还在凌晨给神原骏河打电话向她炫耀了五个多小时。</p><p><img src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/DangY.jpg"></p><p>　　</p><p>　　</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E5%8A%A8%E6%BC%AB/">动漫</category>
      
      <category domain="http://example.com/categories/%E5%8A%A8%E6%BC%AB/%E6%88%A6%E5%A0%B4%E3%83%B6%E5%8E%9F/">戦場ヶ原</category>
      
      
      <category domain="http://example.com/tags/%E7%89%A9%E8%AA%9E/">物語</category>
      
      <category domain="http://example.com/tags/%E6%88%A6%E5%A0%B4%E3%83%B6%E5%8E%9F/">戦場ヶ原</category>
      
      
      <comments>http://example.com/2022/hello-world/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>物語系列</title>
      <link>http://example.com/2021/wu-yu-xi-lie/</link>
      <guid>http://example.com/2021/wu-yu-xi-lie/</guid>
      <pubDate>Thu, 11 Nov 2021 16:00:00 GMT</pubDate>
      
      <description>&lt;td&gt;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;&lt;/td&gt;物语系列是同一世界背景、同一思想主题下多主角多中心的长篇小说集，担任过第一视角的包括阿良良木曆、羽川翼、神原骏河、千石抚子等。不同叙述者下的作品风格常呈现出显著差异。

&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 50%;&quot;&gt;
    &lt;img  src=&quot;https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/My.jpg&quot; /&gt;
&lt;/div&gt;</description>
      
      
      
      <content:encoded><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><td>&ensp;&ensp;&ensp;&ensp;&ensp;</td>物语系列是同一世界背景、同一思想主题下多主角多中心的长篇小说集，担任过第一视角的包括阿良良木曆、羽川翼、神原骏河、千石抚子等。不同叙述者下的作品风格常呈现出显著差异。<div style="position: relative; width: 100%; height: 0; padding-bottom: 50%;">    <img  src="https://fmphoto.oss-cn-chengdu.aliyuncs.com/Photo/My.jpg" /></div><span id="more"></span><p>物語系列的动画系列全部由<a href="https://zh.moegirl.org.cn/SHAFT">SHAFT</a>制作，<a href="https://zh.moegirl.org.cn/%E6%96%B0%E6%88%BF%E6%98%AD%E4%B9%8B">新房昭之</a>担任监督或总监督，<a href="https://baike.baidu.com/item/%E6%B8%A1%E8%BE%B9%E6%98%8E%E5%A4%AB/438126">渡邊明夫</a>负责人设，<a href="https://baike.baidu.com/item/%E7%A5%9E%E5%89%8D%E6%99%93/7037499">神前曉</a>负责09至13年及《曆物語》《傷物語》的音乐（其余为<a href="https://baike.baidu.com/item/%E7%BE%BD%E5%86%88%E4%BD%B3/306455">羽岡佳</a>），系列构成全部以「<a href="https://zh.moegirl.org.cn/index.php?title=%E4%B8%9C%E5%AF%8C%E8%80%B6%E5%AD%90&action=edit&redlink=1">東富耶子</a>、<a href="https://zh.moegirl.org.cn/%E6%96%B0%E6%88%BF%E6%98%AD%E4%B9%8B">新房昭之</a>」名义。</p>    <div id="aplayer-ZWnUrlqh" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="7285295969" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="100px" data-preload=" auto" data-theme="#555" data-order=" list" data-loop=" all"    ></div><h3 id="人物介绍"><a href="#人物介绍" class="headerlink" title="人物介绍"></a>人物介绍</h3><p>物语系列的主要人物有很多，我就介绍一些比较重要的吧。</p><ul><li><p><del>阿垃垃圾君</del>阿良良木历：故事的男主角，高中生，曾经被吸血鬼咬过而变成半吸血鬼，后来恢复了人类的身份，但仍保留了一些特殊能力。他善良但有时伪善，经常卷入各种怪异事件中，帮助身边的女孩解决问题。他的女朋友是战场原黑仪。</p></li><li><p>战场原黑仪：故事的女主角之一，历的同班同学兼女友，个性暴力而直率，曾经因为体重过轻而被称为“荡漾”。她的身体里寄居着一个名为“蟹”的怪异，可以改变她的体重。她和历相爱，但也经常打架。她是羽川翼的好友²³。</p></li><li><p>羽川翼：故事的女主角之一，历的班长，品行端正、成绩优秀、性格认真、知识渊博，是“班长中的班长”。她曾经暗恋历，但被拒绝后仍然和他保持友谊。她的身体里寄居着一个名为“猫”的怪异，可以让她变成黑发白眼的“黑羽川”，或者变成拥有虎纹头发和虎爪的“苛虎”。她和战场原黑仪是好友¹²³。</p></li><li><p>八九寺真宵：故事的女主角之一，历的妹妹级人物，个性活泼可爱，喜欢说谎和捉弄人。她曾经因为家庭问题而变成了一个不可见的“蜗牛”，后来被历发现并帮助。她和历有着特殊的羁绊，可以通过电话联系到他。她和忍野忍是好朋友²³。</p></li><li><p>神原骏河：故事的女主角之一，历的同校同学，个性强势而自信，擅长运动和打架。她曾经因为厌恶自己的女性身份而被一个名为“猴子”的怪异附身，后来被历制服并接受了自己。她对历有着好感，但也尊重他和黑仪的关系。她和千石抚子是表姐妹²³。</p></li><li><p>千石抚子：故事的女主角之一，历的学妹，个性冷淡而高傲，擅长使用诅咒物品。她曾经因为被欺负而用蛇切绳诅咒同学，后来被历发现并帮助。她对历有着好感，但也尊重他和黑仪的关系。她和神原骏河是表姐妹²³。</p></li><li><p>刃下心：故事的重要人物，一个拥有金色眼睛和金色头发的吸血鬼，是历的主人。她曾经是吸血鬼界的王者，拥有无与伦比的力量和美貌，但在遇到历之前，她被三位吸血鬼猎人攻击并剥夺了肢体。她被历救活后，将历变成了自己的眷属，并与历一起收回了肢体。她对历有着深厚的感情，但也尊重他和黑仪的关系。她的真名是姬丝秀忒</p></li><li><p>阿良良木火怜：故事的女主角之一，历的妹妹，个性活泼而任性，喜欢和历玩耍和撒娇。她曾经因为不满历和黑仪的关系而被一个名为“蜂”的怪异附身，后来被历和黑仪帮助。她对历有着兄妹之外的感情，但也尊重他和黑仪的关系。她和阿良良木月火是双胞胎姐妹</p></li><li><p>阿良良木月火：故事的女主角之一，历的妹妹，个性冷静而理智，喜欢读书和学习。她曾经因为不满历和黑仪的关系而被一个名为“凤”的怪异附身，后来被历和黑仪帮助。她对历有着兄妹之外的感情，但也尊重他和黑仪的关系。她和阿良良木火怜是双胞胎姐妹</p></li></ul><p>　　</p><p>　　　</p>]]></content:encoded>
      
      
      <category domain="http://example.com/categories/%E5%8A%A8%E6%BC%AB/">动漫</category>
      
      <category domain="http://example.com/categories/%E5%8A%A8%E6%BC%AB/%E7%89%A9%E8%AA%9E%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA/">物語シリーズ</category>
      
      
      <category domain="http://example.com/tags/%E7%89%A9%E8%AA%9E/">物語</category>
      
      
      <comments>http://example.com/2021/wu-yu-xi-lie/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
